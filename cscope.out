cscope 15 $HOME/sw3/P3/p3               0000199580
	@Client.cpp

1 
	~<io°ªam
>

2 
	~<°rög.h
>

3 
	~<sys/ty≥s.h
>

4 
	~<sys/sockë.h
>

5 
	~<√töë/ö.h
>

6 
	~<¨∑/öë.h
>

7 
	~<°dlib.h
>

8 
	~<uni°d.h
>

10 
usög
 
«me•a˚
 
	g°d
;

13 ˛as†
	cClõ¡


15 
	mpublic
:

17 
SèπClõ¡
();

18 
W‹kClõ¡
();

19 
EndClõ¡
();

21 
	m¥iv©e
:

23 
aClõ¡
;

24 
	maP‹tNum
;

25 
	maBufSize
;

26 *
	maBuf„r
;

27 *
	maIp
;

28 
boﬁ
 
	misMembî
;

30 
aLogIn
();

34 
Clõ¡
 
	g˛õ¡
;

37 
	$maö
(
¨gc
, * 
¨gv
[]){

39 
˛õ¡
.
	`SèπClõ¡
();

40 
˛õ¡
.
	`W‹kClõ¡
();

41 
˛õ¡
.
	`EndClõ¡
();

44 
	}
}

47 
	gClõ¡
::
	$SèπClõ¡
(){

49 
aP‹tNum
 = 1500;

50 
aBufSize
 = 1024;

51 
aBuf„r
 = 
√w
 [
aBufSize
];

53 
aIp
 = 
√w
 [15];

55 
	`°r˝y
(
aIp
,"127.0.0.1");

57 
°rög
 
°r
;

59 
sockaddr_ö
 
£rvî_addr
;

63 
aClõ¡
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

65 if(
aClõ¡
 < 0){

66 
cout
 << "Eº‹ cª©ög sockë..."<< 
ídl
;

67 
	`exô
(1);

70 
cout
 << "Clöë Sockë cª©ed"<< 
ídl
;

72 
£rvî_addr
.
sö_Ámûy
 = 
AF_INET
;

73 
£rvî_addr
.
sö_p‹t
 = 
	`ht⁄s
(
aP‹tNum
);

75 
	`mem£t
(&(
£rvî_addr
.
sö_zîo
),0,8);

76 
£rvî_addr
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
aIp
);

80 if(
	`c⁄√˘
(
aClõ¡
, (
sockaddr
*)&
£rvî_addr
, (server_addr))==0){

81 
cout
 << "C⁄√˘ögÅÿ£rvî..."<< 
ídl
;

84 
	`ªcv
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

85 
cout
 << 
aBuf„r
 << 
ídl
;

87 
	}
}

90 
	gClõ¡
::
	$W‹kClõ¡
(){

92 
°rög
 
°r
;

94 
	`aLogIn
();

96 if(
isMembî
=
åue
){

97 
åue
){

98 
	`gëlöe
(
cö
,
°r
);

99 
	`°r˝y
(
aBuf„r
,&
°r
[0]);

101 
	`£nd
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

102 if(
aBuf„r
[0]=='!'){

106 
	`ªcv
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

107 
cout
 << 
aBuf„r
;

111 
åue
){

112 
	`gëlöe
(
cö
,
°r
);

113 
	`°r˝y
(
aBuf„r
,&
°r
[0]);

115 
	`£nd
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

116 if(
aBuf„r
[0]=='!'){

120 
	`ªcv
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

121 
cout
 << 
aBuf„r
;

125 
	}
}

128 
	gClõ¡
::
	$EndClõ¡
(){

131 
cout
 << "c⁄√˘i⁄Åîmö©ed..." << 
ídl
;

132 
cout
 << "Goodbye" << 
ídl
;

134 
dñëe
[] 
aBuf„r
;

135 
dñëe
[] 
aIp
;

137 
	`˛o£
(
aClõ¡
);

139 
	}
}

142 
	gClõ¡
::
	$aLogIn
(){

144 
°rög
 
°r
;

146 
cout
 << "LogI¿°¨t!!"<< 
ídl
;

148 
åue
){

149 
	`°r˝y
(
aBuf„r
, "client");

150 
	`£nd
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

151 
°r
 = 
aBuf„r
;

153 
	`ªcv
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

154 
°r
 = 
aBuf„r
;

156 if(
°r
 == "Youáre client..."){

157 
cout
 << "Clõ¡ modêIn" << 
ídl
;

162 
åue
){

163 
cout
 << "1. Membî Log In"<< 
ídl
;

164 
cout
 << "2. Nÿmembî Log In"<< 
ídl
;

165 
cout
 << "3. Regi°î"<< 
ídl
;

166 
	`gëlöe
(
cö
,
°r
);

167 if(
°r
 == "1"){

168 
	`°r˝y
(
aBuf„r
,"member");

169 
	`£nd
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

170 
	`ªcv
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

171 
°r
 = 
aBuf„r
;

176 if(
°r
 == "Youáre member"){

177 
cout
 << "membî Log In" << 
ídl
;

178 
isMembî
 = 
åue
;

181 }if(
°r
 == "2"){

182 
	`°r˝y
(
aBuf„r
,"nomember");

183 
	`£nd
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

184 
	`ªcv
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

185 
°r
 = 
aBuf„r
;

187 if(
°r
 == "YouáreÇot member"){

188 
cout
 << "Nÿmembî Log In"<< 
ídl
;

189 
isMembî
 = 
Ál£
;

192 }if(
°r
 =="3"){

193 
	`°r˝y
(
aBuf„r
,"register");

194 
	`£nd
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

195 
	`ªcv
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

196 
cout
 << 
aBuf„r
 <<
ídl
;

198 
°rög
 
ãm
;

199 
cout
 << "ID =";

200 
	`gëlöe
(
cö
,
ãm
);

201 
°r
 = 
ãm
;

202 
cout
 << "Password =";

203 
	`gëlöe
(
cö
,
ãm
);

204 
°r
 +" * " + 
ãm
 + " #";

205 
	`°r˝y
(
aBuf„r
,&
°r
[0]);

207 
	`£nd
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

211 
	}
}

	@Server.cpp

1 
	~<io°ªam
>

2 
	~<ve˘‹
>

3 
	~<°rög.h
>

4 
	~<sys/ty≥s.h
>

5 
	~<sys/sockë.h
>

6 
	~<√töë/ö.h
>

7 
	~<¨∑/öë.h
>

8 
	~<°dlib.h
>

9 
	~<uni°d.h
>

10 
	~<±hªad.h
>

11 
	~"mysqlôe.h
"

13 
usög
 
«me•a˚
 
	g°d
;

15 ˛as†
	cM™agî


17 
	mpublic
:

19 
Choo£Mode
(
˛õ¡
);

20 
LogIn
(
˛õ¡
);

21 
boﬁ
 
	$GëisClõ¡
(Ë{ 
isClõ¡
;}

22 
boﬁ
 
	$GëisMembî
(Ë{ 
isMembî
;
	}
}

24 
	g¥iv©e
:

26 
boﬁ
 
isClõ¡
;

27 
boﬁ
 
	gisMembî
;

31 ˛as†
	cSîvî


33 
	mpublic
:

35 
SèπSîvî
();

36 
EndSîvî
();

37 
Regi°îClõ¡
(
˛õ¡
);

38 
Regi°îSt‹e
(
˛õ¡
);

39 
	m¥iv©e
:

41 
±hªad_t
 
aThªad
;

42 
±hªad_©å_t
 
	maAâr
;

44 
±hªad_muãx_t
 
	maClõ¡Accou¡_lock
;

45 
±hªad_muãx_t
 
	maClõ¡Info_lock
;

46 
±hªad_muãx_t
 
	maSt‹eAccou¡_lock
;

47 
±hªad_muãx_t
 
	maSt‹eGíª_lock
;

48 
±hªad_muãx_t
 
	maSt‹eInfo_lock
;

50 
MySqlôe
 
	maClõ¡Accou¡
;

51 
MySqlôe
 
	maClõ¡Info
;

53 
MySqlôe
 
	maSt‹eAccou¡
;

54 
MySqlôe
 
	maSt‹eGíª
;

55 
MySqlôe
 
	maSt‹eInfo
;

60 * 
SîvîWaôClõ¡
(*
¨g
);

61 * 
SîvîW‹k
(*
¨g
);

63 
Sîvî
 
	g£rvî
;

66 
	$maö
(
¨gc
, * 
¨gv
[]){

68 
£rvî
.
	`SèπSîvî
();

70 
åue
){

71 
°rög
 
öput
;

73 
cout
 << "I‡youÖush 'íd' sîvî wû»bêãrmö©ed!!" << 
ídl
;

74 
cö
 >> 
öput
;

76 if(
öput
 == "end"){

77 
cout
 << "Sîvî i†ãrmö©ed!!"<< 
ídl
;

82 
£rvî
.
	`EndSîvî
();

85 
	}
}

88 * 
	$SîvîWaôClõ¡
(*
¨g
){

90 *
˛õ¡
, 
£rvî
;

91 
p‹tNum
 = 1500;

92 
boﬁ
 
isExô
 = 
Ál£
;

94 
±hªad_t
 
thªad
;

95 
±hªad_©å_t
 
©å
;

97 
	`±hªad_©å_öô
(&
©å
);

99 
sockaddr_ö
 
£rvî_addr
;

100 
sockÀn_t
 
size
;

104 
£rvî
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

106 if(
£rvî
 < 0){

107 
cout
 << "Eº‹É°ablishög c⁄√˘i⁄."<< 
ídl
;

108 
	`exô
(1);

111 
cout
<< "Sîvî Sockë c⁄√˘i⁄ cª©ed..."<< 
ídl
;

113 
£rvî_addr
.
sö_Ámûy
 = 
AF_INET
;

114 
£rvî_addr
.
sö_addr
.
s_addr
 = 
	`ht⁄s
(
INADDR_ANY
);

115 
£rvî_addr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹tNum
);

119 if(
	`böd
(
£rvî
, (
sockaddr
*)&
£rvî_addr
, (server_addr)) <0){

120 
cout
<< "Eº‹ bödög sockë..."<< 
ídl
;

121 
	`exô
(1);

124 
size
 = (
£rvî_addr
);

125 
cout
 << "Lookög f‹ clõ¡..." << 
ídl
;

129 
	`li°í
(
£rvî
, 10);

133 
cout
 << "Waô f‹ clõ¡!!" << 
ídl
;

134 
˛õ¡
 = 
√w
 ;

135 *
˛õ¡
 = 
	`ac˚±
(
£rvî
,(
sockaddr
*)&
£rvî_addr
,&
size
);

136 if(*
˛õ¡
<0){

137 
cout
 <<"Eº‹ Ac˚±..."<< 
ídl
;

138 
	`exô
(1);

140 
cout
 <<"˛õ¡ w™àtÿc⁄√˘..."<< 
ídl
;

141 
	`±hªad_¸óã
(&
thªad
,&
©å
,
SîvîW‹k
,(*)
˛õ¡
);

142 
	`±hªad_dëach
(
thªad
);

146 
	`˛o£
(
£rvî
);

149  
NULL
;

150 
	}
}

153 * 
	$SîvîW‹k
(*
¨g
){

155 *
˛õ¡
 = (*)
¨g
;

156 
bufsize
 = 1024;

157 
buf„r
[
bufsize
];

159 
M™agî
 
m™agî
;

161 
	`°r˝y
(
buf„r
, "Server connected...\n");

162 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

164 
m™agî
.
	`Choo£Mode
(*
˛õ¡
);

165 
m™agî
.
	`LogIn
(*
˛õ¡
);

167 if(
m™agî
.
	`GëisClõ¡
(Ë=
åue
){

168 if(
m™agî
.
	`GëisMembî
(Ë=
åue
){

169 
åue
){

170 
°rög
 
SåBuf„r
;

172 
	`ªcv
(*
˛õ¡
,
buf„r
,
bufsize
,0);

173 
SåBuf„r
 = 
buf„r
;

175 if(
buf„r
[0]=='!'){

176 
cout
 << "membî c⁄√˘ out!!" << 
ídl
;

180 if(
buf„r
[0] == 'c'){

182 
buf„r
[1]){

185 
	`°r˝y
(
buf„r
, "Return c1\n");

186 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

190 
	`°r˝y
(
buf„r
, "Return c2\n");

191 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

194 
	`°r˝y
(
buf„r
, "Return c3\n");

195 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

200 
	`°r˝y
(
buf„r
, "Invalid input...\n");

201 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

205 
	`°r˝y
(
buf„r
, "Invalid input...\n");

206 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

212 
åue
){

213 
°rög
 
SåBuf„r
;

215 
	`ªcv
(*
˛õ¡
,
buf„r
,
bufsize
,0);

216 
SåBuf„r
 = 
buf„r
;

218 if(
buf„r
[0]=='!'){

219 
cout
 << "nÿmembî c⁄√˘ out!!" << 
ídl
;

223 if(
buf„r
[0] == 'c'){

225 
buf„r
[1]){

228 
	`°r˝y
(
buf„r
, "Return c1\n");

229 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

233 
	`°r˝y
(
buf„r
, "Return c2\n");

234 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

237 
	`°r˝y
(
buf„r
, "Return c3\n");

238 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

243 
	`°r˝y
(
buf„r
, "Invalid input...\n");

244 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

247 
	`°r˝y
(
buf„r
, "Invalid input...\n");

248 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

254 
åue
){

255 
°rög
 
SåBuf„r
;

257 
	`ªcv
(*
˛õ¡
,
buf„r
,
bufsize
,0);

258 
SåBuf„r
 = 
buf„r
;

260 if(
buf„r
[0]=='!'){

261 
cout
 << "°‹êc⁄√˘ out!!" << 
ídl
;

265 if(
buf„r
[0] == 's'){

267 
buf„r
[1]){

270 
	`°r˝y
(
buf„r
, "Return s1\n");

271 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

275 
	`°r˝y
(
buf„r
, "Return s2\n");

276 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

279 
	`°r˝y
(
buf„r
, "Return s3\n");

280 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

285 
	`°r˝y
(
buf„r
, "Invalid input...\n");

286 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

290 
	`°r˝y
(
buf„r
, "Invalid input...\n");

291 
	`£nd
(*
˛õ¡
,
buf„r
,
bufsize
,0);

297 
	`˛o£
(*
˛õ¡
);

298 
dñëe
 
˛õ¡
;

300  
NULL
;

301 
	}
}

304 
	gSîvî
::
	$SèπSîvî
(){

305 
bufsize
 = 1024;

306 
buf„r
[
bufsize
];

307 
boﬁ
 
ªt_vÆ
;

309 
	`±hªad_©å_öô
(&
aAâr
);

310 
	`±hªad_¸óã
(&
aThªad
, &
aAâr
, 
SîvîWaôClõ¡
, 
NULL
);

311 
	`±hªad_muãx_öô
(&
aClõ¡Accou¡_lock
,
NULL
);

312 
	`±hªad_muãx_öô
(&
aClõ¡Info_lock
,
NULL
);

313 
	`±hªad_muãx_öô
(&
aSt‹eAccou¡_lock
,
NULL
);

314 
	`±hªad_muãx_öô
(&
aSt‹eGíª_lock
,
NULL
);

315 
	`±hªad_muãx_öô
(&
aSt‹eInfo_lock
,
NULL
);

319 
	`°r˝y
(
buf„r
,"aClientAccount");

320 
ªt_vÆ
 = 
aClõ¡Accou¡
.
	`O≥nDB
(
buf„r
);

321 if(
ªt_vÆ
 =
åue
){

322 
cout
 << "aClõ¡Accou¡ DB o≥n!!"<< 
ídl
;

324 
cout
 << "a˛õ¡Accou¡ DB o≥¿Áû..."<< 
ídl
;

325 
	`exô
(1);

328 
	`°r˝y
(
buf„r
,"aClientInfo");

329 
ªt_vÆ
 = 
aClõ¡Info
.
	`O≥nDB
(
buf„r
);

330 if(
ªt_vÆ
 =
åue
){

331 
cout
 << "aClõ¡InfÿDB o≥n!!"<< 
ídl
;

333 
cout
 << "a˛õ¡InfÿDB o≥¿Áû..."<<
ídl
;

334 
	`exô
(1);

337 
	`°r˝y
(
buf„r
,"aStoreAccount");

338 
ªt_vÆ
 = 
aSt‹eAccou¡
.
	`O≥nDB
(
buf„r
);

339 if(
ªt_vÆ
 ==
åue
){

340 
cout
 << "aSt‹eAccou¡ DB o≥n!!"<< 
ídl
;

342 
cout
 << "aSt‹eAccouàDB o≥¿Áû!!"<< 
ídl
;

343 
	`exô
(1);

346 
	`°r˝y
(
buf„r
,"aStoreGenre");

347 
ªt_vÆ
 = 
aSt‹eGíª
.
	`O≥nDB
(
buf„r
);

348 if(
ªt_vÆ
 =
åue
){

349 
cout
 << "aSt‹eGíª DB o≥n!!" << 
ídl
;

351 
cout
 << "aSt‹eGíª DB o≥¿Áû ..." << 
ídl
;

352 
	`exô
(1);

355 
	`°r˝y
(
buf„r
,"aStoreInfo");

356 
ªt_vÆ
 = 
aSt‹eInfo
.
	`O≥nDB
(
buf„r
);

357 if(
ªt_vÆ
 =
åue
){

358 
cout
 << "aSt‹eInfÿDB o≥n!!" << 
ídl
;

360 
cout
 << "aSt‹eInfÿDB o≥¿Áû..." << 
ídl
;

364 
cout
 <<"Clõ¡Accou¡InfÿTabÀ C⁄fúmög..."<< 
ídl
;

365 
	`°r˝y
(
buf„r
,"ClientAccountInfo * identityÅext *ÖasswordÅext #");

366 
aClõ¡Accou¡
.
	`Cª©eTabÀ
(2,
buf„r
);

368 
cout
 <<"Clõ¡InfÿTabÀ c⁄fúmög..."<< 
ídl
;

369 
	`°r˝y
(
buf„r
,"ClientInfo * identityÅext *ÉmailÅext * historyÅext #");

370 
aClõ¡Info
.
	`Cª©eTabÀ
(3,
buf„r
);

372 
cout
 <<"St‹eAccou¡InfÿTabÀ c⁄fúmög..."<<
ídl
;

373 
	`°r˝y
(
buf„r
,"StoreAccountInfo *ÇameÅext *ÖasswordÅext #");

374 
aSt‹eAccou¡
.
	`Cª©eTabÀ
(2,
buf„r
);

376 
cout
 <<"St‹eGíª TabÀ c⁄fúmög..."<<
ídl
;

377 
	`°r˝y
(
buf„r
,"StoreGenre *ÇameÅext * genreÅext #");

378 
aSt‹eGíª
.
	`Cª©eTabÀ
(2,
buf„r
);

380 
cout
 <<"St‹eInfÿTabÀ c⁄fúmög..."<<
ídl
;

381 
	`°r˝y
(
buf„r
,"StoreInfo *ÇameÅext *ÅableinfoÅext * menuÅext *ÑeviewÅext #");

382 
aSt‹eInfo
.
	`Cª©eTabÀ
(2,
buf„r
);

384 
	}
}

387 
	gSîvî
::
	$EndSîvî
(){

389 
	`±hªad_ˇn˚l
(
aThªad
);

390 
aClõ¡Accou¡
.
	`Clo£DB
();

391 
aClõ¡Info
.
	`Clo£DB
();

392 
aSt‹eAccou¡
.
	`Clo£DB
();

393 
aSt‹eGíª
.
	`Clo£DB
();

395 
	}
}

401 
	gM™agî
::
	$Choo£Mode
(
˛õ¡
){

402 
bufsize
 = 1024;

403 
buf„r
[
bufsize
];

404 
°rög
 
°r
;

406 
åue
){

407 
	`ªcv
(
˛õ¡
,
buf„r
,
bufsize
,0);

408 
°r
 = 
buf„r
;

409 if(
°r
 == "client"){

411 
	`°r˝y
(
buf„r
,"Youáre client...");

412 
	`£nd
(
˛õ¡
,
buf„r
,
bufsize
,0);

413 
isClõ¡
 = 
åue
;

416 }if(
°r
 == "store"){

418 
	`°r˝y
(
buf„r
,"Youáre store...");

419 
	`£nd
(
˛õ¡
,
buf„r
,
bufsize
,0);

420 
isClõ¡
 = 
Ál£
;

425 
	`°r˝y
(
buf„r
,"Invalid mode chooseágain");

426 
	`£nd
(
˛õ¡
,
buf„r
,
bufsize
,0);

431 if(
isClõ¡
 =
åue
){

432 
cout
 << "Clõ¡ modêö..." << 
ídl
;

434 
cout
 << "St‹êmodêö..." << 
ídl
;

436 
	}
}

439 
	gM™agî
::
	$LogIn
(
˛õ¡
){

440 
bufsize
 = 1024;

441 
buf„r
[
bufsize
];

442 
°rög
 
°r
;

444 if(
isClõ¡
 =
åue
){

445 
åue
){

446 
	`ªcv
(
˛õ¡
,
buf„r
,
bufsize
,0);

447 
°r
 = 
buf„r
;

448 if(
°r
 == "member"){

450 
	`°r˝y
(
buf„r
,"Youáre member");

451 
	`£nd
(
˛õ¡
,
buf„r
,
bufsize
,0);

452 
isMembî
 = 
åue
;

453 
cout
 << " membîÜog In..."<< 
ídl
;

455 }if(
°r
 == "nomember"){

456 
	`°r˝y
(
buf„r
,"YouáreÇot member");

457 
	`£nd
(
˛õ¡
,
buf„r
,
bufsize
,0);

458 
isMembî
 = 
Ál£
;

459 
cout
 << "ÇÿmembîÜog in" << 
ídl
;

461 }if(
°r
 == "register"){

462 
£rvî
.
	`Regi°îClõ¡
(
˛õ¡
);

464 
	`°r˝y
(
buf„r
,"Invalid option!!");

465 
	`£nd
(
˛õ¡
,
buf„r
,
bufsize
,0);

470 
åue
){

471 
	`ªcv
(
˛õ¡
,
buf„r
,
bufsize
,0);

472 
°r
 = 
buf„r
;

473 if(
°r
 == "login"){

475 
	`°r˝y
(
buf„r
,"Youáre store member");

476 
	`£nd
(
˛õ¡
,
buf„r
,
bufsize
,0);

477 
cout
 <<" st‹êmembîÜog in" << 
ídl
;

479 }if(
°r
 == "register"){

480 
£rvî
.
	`Regi°îSt‹e
(
˛õ¡
);

484 
	}
}

487 
	gSîvî
::
	$Regi°îClõ¡
(
˛õ¡
){

489 
	`±hªad_muãx_lock
(&
aClõ¡Accou¡_lock
);

491 
bufsize
 = 1024;

492 
buf„r
[
bufsize
];

494 
	`°r˝y
(
buf„r
,"Input IDándÖassword!!");

495 
	`£nd
(
˛õ¡
,
buf„r
,
bufsize
,0);

496 
	`ªcv
(
˛õ¡
,
buf„r
,
bufsize
,0);

501 
°rög
 
ãmSå
;

502 
°rög
 
°r
;

503 
ãmSå
 = "ClientAccountInfo * ";

505 
°r
 = 
buf„r
;

506 
ãmSå
 +
°r
;

508 
	`°r˝y
(
buf„r
,&
ãmSå
[0]);

509 
aClõ¡Accou¡
.
	`Up£πD©a
(
buf„r
);

511 
aClõ¡Accou¡
.
	`PrötTabÀ
("ClientAccountInfo");

513 
	`±hªad_muãx_u∆ock
(&
aClõ¡Accou¡_lock
);

515 
	}
}

518 
	gSîvî
::
	$Regi°îSt‹e
(
˛õ¡
){

520 
	`±hªad_muãx_lock
(&
aSt‹eAccou¡_lock
);

522 
bufsize
 = 1024;

523 
buf„r
[
bufsize
];

525 
	`°r˝y
(
buf„r
,"InputÇameánd Password!!");

526 
	`£nd
(
˛õ¡
,
buf„r
,
bufsize
,0);

527 
	`ªcv
(
˛õ¡
,
buf„r
,
bufsize
,0);

531 
°rög
 
ãmp
;

532 
°rög
 
°r
;

533 
ãmp
= "StoreAccountInfo * ";

535 
°r
 = 
buf„r
;

536 
ãmp
 +
°r
;

538 
	`°r˝y
(
buf„r
,&
ãmp
[0]);

540 
aSt‹eAccou¡
.
	`Up£πD©a
(
buf„r
);

542 
aSt‹eAccou¡
.
	`PrötTabÀ
("StoreAccountInfo");

544 
	`±hªad_muãx_u∆ock
(&
aSt‹eAccou¡_lock
);

546 
	}
}

	@Store.cpp

1 
	~<io°ªam
>

2 
	~<°rög.h
>

3 
	~<sys/ty≥s.h
>

4 
	~<sys/sockë.h
>

5 
	~<√töë/ö.h
>

6 
	~<¨∑/öë.h
>

7 
	~<°dlib.h
>

8 
	~<uni°d.h
>

10 
usög
 
«me•a˚
 
	g°d
;

13 ˛as†
	cSt‹e


15 
	mpublic
:

17 
SèπSt‹e
();

18 
W‹kSt‹e
();

19 
EndSt‹e
();

21 
	m¥iv©e
:

23 
aClõ¡
;

24 
	maP‹tNum
;

25 
	maBufSize
;

26 *
	maBuf„r
;

27 *
	maIp
;

29 
aLogIn
();

34 
St‹e
 
	g°‹e
;

37 
	$maö
(
¨gc
, * 
¨gv
[]){

39 
°‹e
.
	`SèπSt‹e
();

40 
°‹e
.
	`W‹kSt‹e
();

41 
°‹e
.
	`EndSt‹e
();

44 
	}
}

47 
	gSt‹e
::
	$SèπSt‹e
(){

49 
aP‹tNum
 = 1500;

50 
aBufSize
 = 1024;

51 
aBuf„r
 = 
√w
 [
aBufSize
];

53 
aIp
 = 
√w
 [15];

55 
	`°r˝y
(
aIp
,"127.0.0.1");

57 
°rög
 
°r
;

59 
sockaddr_ö
 
£rvî_addr
;

63 
aClõ¡
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

65 if(
aClõ¡
 < 0){

66 
cout
 << "Eº‹ cª©ög sockë..."<< 
ídl
;

67 
	`exô
(1);

70 
cout
 << "Clöë Sockë cª©ed"<< 
ídl
;

72 
£rvî_addr
.
sö_Ámûy
 = 
AF_INET
;

73 
£rvî_addr
.
sö_p‹t
 = 
	`ht⁄s
(
aP‹tNum
);

75 
	`mem£t
(&(
£rvî_addr
.
sö_zîo
),0,8);

76 
£rvî_addr
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
aIp
);

80 if(
	`c⁄√˘
(
aClõ¡
, (
sockaddr
*)&
£rvî_addr
, (server_addr))==0){

81 
cout
 << "C⁄√˘ögÅÿ£rvî..."<< 
ídl
;

84 
	`ªcv
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

85 
cout
 << 
aBuf„r
 << 
ídl
;

87 
	}
}

90 
	gSt‹e
::
	$W‹kSt‹e
(){

92 
°rög
 
°r
;

94 
	`aLogIn
();

96 
åue
){

97 
	`gëlöe
(
cö
,
°r
);

98 
	`°r˝y
(
aBuf„r
,&
°r
[0]);

100 
	`£nd
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

102 if(
aBuf„r
[0]=='!'){

106 
	`ªcv
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

107 
cout
 << 
aBuf„r
;

111 
	}
}

114 
	gSt‹e
::
	$EndSt‹e
(){

117 
cout
 << "c⁄√˘i⁄Åîmö©ed..." << 
ídl
;

118 
cout
 << "Goodbye" << 
ídl
;

120 
dñëe
[] 
aBuf„r
;

121 
dñëe
[] 
aIp
;

123 
	`˛o£
(
aClõ¡
);

125 
	}
}

128 
	gSt‹e
::
	$aLogIn
(){

130 
°rög
 
°r
;

132 
cout
 << "LogI¿°¨t!!"<< 
ídl
;

134 
åue
){

135 
	`°r˝y
(
aBuf„r
, "store");

136 
	`£nd
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

138 
	`ªcv
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

139 
°r
 = 
aBuf„r
;

141 if(
°r
 == "Youáre store..."){

142 
cout
 << "St‹êModêvÆid..."<< 
ídl
;

147 
åue
){

149 
cout
 << "1. Log i¿St‹e"<< 
ídl
;

150 
cout
 << "2. Regi°î St‹e"<< 
ídl
;

151 
	`gëlöe
(
cö
,
°r
);

153 if(
°r
 == "1"){

154 
	`°r˝y
(
aBuf„r
,"login");

155 
	`£nd
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

156 
	`ªcv
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

159 
cout
 << 
aBuf„r
 << 
ídl
;

162 }if(
°r
 == "2"){

163 
	`°r˝y
(
aBuf„r
,"register");

164 
	`£nd
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

165 
	`ªcv
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

166 
cout
 << 
aBuf„r
 << 
ídl
;

168 
°rög
 
ãmp
;

169 
cout
 << "name = ";

170 
	`gëlöe
(
cö
,
ãmp
);

171 
°r
 = 
ãmp
;

172 
cout
 << "Password = ";

173 
	`gëlöe
(
cö
,
ãmp
);

174 
°r
 +" * " + 
ãmp
 + " #";

176 
	`°r˝y
(
aBuf„r
,&
°r
[0]);

177 
	`£nd
(
aClõ¡
,
aBuf„r
,
aBufSize
,0);

184 
	}
}

	@mysqlite.cpp

1 
	~<io°ªam
>

2 
	~<°rög
>

3 
	~<s°ªam
>

4 
	~<deque
>

5 
	~"mysqlôe.h
"

7 
usög
 
«me•a˚
 
	g°d
;

10 
boﬁ
 
	gMySqlôe
::
	$O≥nDB
(* 
öput
) {

11 
°rög
 
°r
;

12 
ªt
;

14 
°r
 = 
öput
;

15 
°r
 += ".db";

17 
ªt
 = 
	`sqlôe3_›í_v2
(
°r
.
	`c_°r
(), &
aDB
, 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
, 
NULL
);

19 if(
ªt
) {

20  
Ál£
;

23  
åue
;

25 
	}
}

27 
boﬁ
 
	gMySqlôe
::
	$Clo£DB
() {

28  (
	`sqlôe3_˛o£
(
aDB
Ë=
SQLITE_OK
);

29 
	}
}

31 
boﬁ
 
	gMySqlôe
::
	$Cª©eTabÀ
(
cﬁNum
, * 
buf„r
) {

32 
sqlôe3_°mt
 *
°mt
;

33 
°rög
 
	`quîy
("CREATE TABLE ");

34 
°rög
 
°r
;

35 
°rög
 
°r2
;

36 
°rög
 
tokí
;

37 
boﬁ
 
ªsu…
 = 
åue
;

39 
°r2
 = 
buf„r
;

40 
°rög°ªam
 
	`°ªam
(
°r2
);

41 
°ªam
 >> 
°r
;

44 if(
	`IsTabÀExi°
(
°r
)) {

45 
cout
 << 
°r
 <<" i†exi°!!"<< 
ídl
;

46  
Ál£
;

49 
°r
 += " (id integerÖrimary keyáutoincrement";

50 
quîy
 +
°r
;

52 
°rög
 
·
, 
°
;

53 
åue
) {

55 if(
cﬁNum
>0){

56 
°ªam
 >> 
tokí
;

57 
°ªam
 >> 
tokí
;

58 
°r
 = 
tokí
 + " ";

59 
°ªam
 >> 
tokí
;

60 
°r
 +
tokí
;

62 
°r
 = "!";

64 
cﬁNum
--;

66 if(
°r
.
	`com∑ª
("!") == 0) {

70 
°rög°ªam
 
	`ss
(
°r
);

71 
ss
 >> 
·
;

72 
ss
 >> 
°
;

74 if(
°
.
	`com∑ª
("text") != 0 && st.compare("integer") != 0) {

75 
cout
 << "(Cª©eTabÀËINVALID TYPE" << 
ídl
;

79 
°r
 = ", " + 
·
 + " " + 
°
;

80 
quîy
 +
°r
;

82 
quîy
 += ")";

84 
	`sqlôe3_¥ï¨e_v2
(
aDB
, 
quîy
.
	`c_°r
(), -1, &
°mt
, 
NULL
);

86 
	`Begö
();

88 if(
	`sqlôe3_°ï
(
°mt
Ë!
SQLITE_DONE
) {

89 
	`fw¥ötf
(
°dîr
, 
L
"löê%d: %s\n", 
__LINE__
, 
	`sqlôe3_îrmsg16
(
aDB
));

90 
ªsu…
 = 
Ál£
;

93 if(
ªsu…
 =
åue
){

94 
cout
 << "TabÀ maded!!" << 
ídl
;

97 
	`Commô
();

99 
	`sqlôe3_ª£t
(
°mt
);

100 
	`sqlôe3_föÆize
(
°mt
);

102  
ªsu…
;

103 
	}
}

105 
boﬁ
 
	gMySqlôe
::
	$DñëeTabÀ
() {

106 
sqlôe3_°mt
 *
°mt
;

107 
°rög
 
	`quîy
("DROP TABLE IF EXISTS ");

108 
°rög
 
°r
;

109 
boﬁ
 
ªsu…
 = 
åue
;

111 
cout
 << "(DeleteTable) INPUT TABLE NAME : ";

112 
	`gëlöe
(
cö
, 
°r
);

114 !
	`IsTabÀExi°
(
°r
)) {

115 
cout
 << "(DeleteTable) INPUT EXIST TABLE NAME : ";

116 
	`gëlöe
(
cö
, 
°r
);

118 
quîy
 +
°r
;

120 
	`sqlôe3_¥ï¨e_v2
(
aDB
, 
quîy
.
	`c_°r
(), -1, &
°mt
, 
NULL
);

122 
	`Begö
();

124 if(
	`sqlôe3_°ï
(
°mt
Ë!
SQLITE_DONE
) {

125 
	`fw¥ötf
(
°dîr
, 
L
"löê%d: %s\n", 
__LINE__
, 
	`sqlôe3_îrmsg16
(
aDB
));

126 
ªsu…
 = 
Ál£
;

129 
	`Commô
();

131 
	`sqlôe3_ª£t
(
°mt
);

132 
	`sqlôe3_föÆize
(
°mt
);

134  
ªsu…
;

135 
	}
}

138 
	gMySqlôe
::
	$FödD©a
() {

139 
sqlôe3_°mt
 *
°mt
;

140 
°rög
 
	`quîy
("SELECT * FROM ");

141 
°rög
 
°r
;

142 
ªt
 = 0;

143 
ªsu…
;

145 
cout
 << "(FindData) INPUT TABLE NAME : ";

146 
	`gëlöe
(
cö
, 
°r
);

148 !
	`IsTabÀExi°
(
°r
)) {

149 
cout
 << "(FindData) INPUT EXIST TABLE NAME : ";

150 
	`gëlöe
(
cö
, 
°r
);

153 
quîy
 +
°r
;

154 
quîy
 += " where ";

156 
cout
 << "(FindData) INPUT COLUMN NAME : ";

157 
	`gëlöe
(
cö
, 
°r
);

159 
quîy
 +
°r
;

160 
quîy
 += "='";

162 
cout
 << "(FindData) INPUT DATA : ";

163 
	`gëlöe
(
cö
, 
°r
);

165 
quîy
 +
°r
;

166 
quîy
 += "'";

168 
ªt
 = 
	`sqlôe3_¥ï¨e_v2
(
aDB
, 
quîy
.
	`c_°r
(), -1, &
°mt
, 
NULL
);

170 if(
ªt
 !
SQLITE_OK
) {

171 
cout
 << 
°r
 << " IS INVALID" << 
ídl
;

175 
ªt
 = 
	`sqlôe3_°ï
(
°mt
);

177 i‡(
ªt
 =
SQLITE_ROW
) {

178 
ªsu…
 = 
	`sqlôe3_cﬁumn_öt
(
°mt
, 0);

179 
	`sqlôe3_föÆize
(
°mt
);

180  
ªsu…
;

183 
	`sqlôe3_föÆize
(
°mt
);

186 
	}
}

189 
boﬁ
 
	gMySqlôe
::
	$Up£πD©a
(* 
buf„r
) {

190 
sqlôe3_°mt
 *
°mt
;

191 
°rög
 
	`quîy
("SELECT * FROM ");

192 
°rög
 
°r
;

193 
ödex
;

194 
ªt
 = 0;

195 
boﬁ
 
ªsu…
 = 
åue
;

196 
°rög
 
ãxâemp
[50];

197 
times
=0;

199 
deque
<
°rög
> 
cﬁ_ty≥
;

200 
deque
<
°rög
> 
cﬁ_«me
;

202 
°rög
 
°r2
 = 
buf„r
;

203 
°rög°ªam
 
	`ss
(
°r2
);

205 
ss
 >> 
°r
;

207 if(!
	`IsTabÀExi°
(
°r
)) {

208 
cout
 << "(Up£πD©aËNO TABLE EXIST" << 
ídl
;

209  
Ál£
;

212 
quîy
 +
°r
;

214 
ªt
 = 
	`sqlôe3_¥ï¨e_v2
(
aDB
, 
quîy
.
	`c_°r
(), -1, &
°mt
, 
NULL
);

216 if(
ªt
 !
SQLITE_OK
) {

217 
cout
 << "(Up£πD©aËANY DATA DOES NOT EXIST" << 
ídl
;

218  
Ál£
;

221 
quîy
 = "INSERT OR REPLACE INTO " + 
°r
 + "(";

223 
cﬁs
 = 
	`sqlôe3_cﬁumn_cou¡
(
°mt
);

224 
°rög
 
ãmp
;

226 
cﬁ
 = 1; cﬁ < 
cﬁs
; col++) {

227 
ãmp
 = 
	`sqlôe3_cﬁumn_«me
(
°mt
, 
cﬁ
);

228 
quîy
 +
	`sqlôe3_cﬁumn_«me
(
°mt
, 
cﬁ
);

230 
cﬁ_«me
.
	`push_back
(
ãmp
);

231 
ãmp
 = 
	`sqlôe3_cﬁumn_de˛ty≥
(
°mt
, 
cﬁ
);

232 
cﬁ_ty≥
.
	`push_back
(
ãmp
);

234 if(
cﬁ
 + 1 !
cﬁs
) {

235 
quîy
 += ", ";

238 
quîy
 += ") VALUES(";

240 
cﬁ
 = 1; cﬁ < 
cﬁs
; col++) {

241 
quîy
 += "?";

243 if(
cﬁ
 + 1 !
cﬁs
) {

244 
quîy
 += ", ";

247 
quîy
 += ")";

249 
ªt
 = 
	`sqlôe3_¥ï¨e_v2
(
aDB
, 
quîy
.
	`c_°r
(), -1, &
°mt
, 
NULL
);

251 if(
ªt
 !
SQLITE_OK
) {

252 
cout
 << 
quîy
 << " IS NOT VALID" << 
ídl
;

253  
Ál£
;

256 
	`sqlôe3_ª£t
(
°mt
);

258 
cﬁ
 = 1; cﬁ < 
cﬁs
; col++) {

259 if(
cﬁ_ty≥
.
	`‰⁄t
().
	`com∑ª
("integer") == 0) {

260 
°rög
 
öâemp
;

262 
ss
>>
°r
;

263 
ss
>>
°r
;

264 
öâemp
 = 
°r
;

266 
	`sqlôe3_böd_öt
(
°mt
, 
cﬁ
, 
	`°oi
(
öâemp
));

268 if(
ªt
 !
SQLITE_OK
) {

269 
cout
 << "(Up£πD©aËBIND_INT ERROR" << 
ídl
;

274 
ss
>>
°r
;

275 
ss
>>
°r
;

276 
ãxâemp
[
times
] = 
°r
;

278 
	`sqlôe3_böd_ãxt
(
°mt
, 
cﬁ
, 
ãxâemp
[
times
].
	`c_°r
(),Åexâemp[times].
	`size
(), 
SQLITE_STATIC
);

279 
times
++;

280 if(
ªt
 !
SQLITE_OK
) {

281 
cout
 << "(Up£πD©aËBIND_TEXT ERROR" << 
ídl
;

284 
cﬁ_ty≥
.
	`p›_‰⁄t
();

285 
cﬁ_«me
.
	`p›_‰⁄t
();

288 
ªt
 = 
	`sqlôe3_°ï
(
°mt
);

290 if(
ªt
 !
SQLITE_DONE
) {

291 
cout
 << "(Up£πD©aËSQLITE STEP ERROR" << 
ídl
;

294 
	`sqlôe3_föÆize
(
°mt
);

296 
	}
}

299 
boﬁ
 
	gMySqlôe
::
	$DñëeD©a
(
rID
) {

300 
sqlôe3_°mt
 *
°mt
;

301 
°rög
 
	`quîy
("DELETE FROM ");

302 
°rög
 
°r
;

303 
ªt
 = 0;

305 
cout
 << "(DeleteData) INPUT TABLE NAME : ";

306 
	`gëlöe
(
cö
, 
°r
);

308 if(!
	`IsTabÀExi°
(
°r
)) {

309 
cout
 << "(DñëeD©aËNO TABLE EXIST" << 
ídl
;

310 
	`gëlöe
(
cö
, 
°r
);

313 
quîy
 +
°r
;

314 
quîy
 +" WHERE id=" + 
	`to_°rög
(
rID
);

317 
ªt
 = 
	`sqlôe3_¥ï¨e_v2
(
aDB
, 
quîy
.
	`c_°r
(), -1, &
°mt
, 
NULL
);

319 if(
ªt
 !
SQLITE_OK
) {

320 
cout
 << 
quîy
 << " IS INVALID" << 
ídl
;

321 
	`sqlôe3_föÆize
(
°mt
);

322  
Ál£
;

325 
ªt
 = 
	`sqlôe3_°ï
(
°mt
);

327 if(
ªt
 !
SQLITE_DONE
) {

328 
cout
 << "(DñëeD©aËSQLITE STEP ERROR" << 
ídl
;

331 
	`sqlôe3_föÆize
(
°mt
);

333  
åue
;

334 
	}
}

336 
°rög
 
	gMySqlôe
::
	$GëD©a
(
rID
) {

337 
sqlôe3_°mt
 *
°mt
;

338 
°rög
 
	`quîy
("SELECT * FROM ");

339 
°rög
 
°r
;

340 
ªt
 = 0;

341 
cﬁs
;

343 
cout
 << "(GetData) INPUT TABLE NAME : ";

344 
	`gëlöe
(
cö
, 
°r
);

346 if(!
	`IsTabÀExi°
(
°r
)) {

347 
cout
 << "(GëD©aËNO TABLE EXIST" << 
ídl
;

348 
	`gëlöe
(
cö
, 
°r
);

351 
quîy
 +
°r
;

352 
quîy
 +" WHERE id=" + 
	`to_°rög
(
rID
);

354 
ªt
 = 
	`sqlôe3_¥ï¨e_v2
(
aDB
, 
quîy
.
	`c_°r
(), -1, &
°mt
, 
NULL
);

356 if(
ªt
 !
SQLITE_OK
) {

357 
cout
 << 
quîy
 << " IS INVALID" << 
ídl
;

361 
cﬁs
 = 
	`sqlôe3_cﬁumn_cou¡
(
°mt
);

363 
°rög
 
ªsu…
;

365 
ªt
 = 
	`sqlôe3_°ï
(
°mt
);

366 i‡(
ªt
 =
SQLITE_ROW
) {

367 
cﬁ
 = 1; cﬁ < 
cﬁs
; col++) {

368 
	`sqlôe3_cﬁumn_ty≥
(
°mt
, 
cﬁ
)) {

369 
SQLITE_INTEGER
:

370 if(1 =
cﬁ
) {

371 
ªsu…
 = 
	`to_°rög
(
	`sqlôe3_cﬁumn_öt
(
°mt
, 
cﬁ
));

374 
ªsu…
 +" * " + 
	`to_°rög
(
	`sqlôe3_cﬁumn_öt
(
°mt
, 
cﬁ
));

377 
SQLITE_TEXT
:

378 if(1 =
cﬁ
) {

379 
ªsu…
 = 
	`°rög
(((c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
°mt
, 
cﬁ
)));

382 
ªsu…
 +" * " + 
	`°rög
(((c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
°mt
, 
cﬁ
)));

385 
SQLITE_NULL
:

386 if(1 =
cﬁ
) {

387 
ªsu…
 = "NULL";

390 
ªsu…
 += " * NULL";

395 
ªsu…
 += " #";

396 
	`sqlôe3_föÆize
(
°mt
);

398  
ªsu…
;

401 
	`sqlôe3_föÆize
(
°mt
);

404 
	}
}

407 
	gMySqlôe
::
	$PrötTabÀ
(* 
buf„r
) {

408 
sqlôe3_°mt
 *
°mt
;

409 
°rög
 
	`quîy
("SELECT * FROM ");

410 
°rög
 
°r
;

411 
ªt
 = 0;

412 
cﬁs
;

413 
°rög
 
°r2
;

414 
°r2
 = 
buf„r
;

416 
°rög°ªam
 
	`ss
(
°r2
);

417 
ss
 >> 
°r
;

419 
quîy
 +
°r
;

421 
ªt
 = 
	`sqlôe3_¥ï¨e_v2
(
aDB
, 
quîy
.
	`c_°r
(), -1, &
°mt
, 
NULL
);

423 if(
ªt
 !
SQLITE_OK
) {

424 
cout
 << 
°r
 << " TABLE DATA NOT EXIST" << 
ídl
;

428 
cﬁs
 = 
	`sqlôe3_cﬁumn_cou¡
(
°mt
);

430 
cﬁ
 = 0; cﬁ < 
cﬁs
; col++) {

431 
cout
 << " " << 
	`sqlôe3_cﬁumn_«me
(
°mt
, 
cﬁ
);

433 
cout
 << 
ídl
;

435 
åue
) {

436 
ªt
 = 
	`sqlôe3_°ï
(
°mt
);

437 i‡(
ªt
 =
SQLITE_ROW
) {

438 
cﬁ
 = 0; cﬁ < 
cﬁs
; col++) {

439 
	`sqlôe3_cﬁumn_ty≥
(
°mt
, 
cﬁ
)) {

440 
SQLITE_INTEGER
:

441 
cout
 << " " << 
	`sqlôe3_cﬁumn_öt
(
°mt
, 
cﬁ
) << " ";

443 
SQLITE_FLOAT
:

444 
cout
 << " " << 
	`sqlôe3_cﬁumn_doubÀ
(
°mt
, 
cﬁ
) << " ";

446 
SQLITE_TEXT
:

447 
cout
 << " " << 
	`sqlôe3_cﬁumn_ãxt
(
°mt
, 
cﬁ
) << " ";

449 
SQLITE_NULL
:

450 
cout
 << " " << "NULL" << " ";

454 
cout
 << 
ídl
;

455 } i‡(
ªt
 =
SQLITE_DONE
) {

456 
cout
 << "d⁄e" << 
ídl
;

459 
cout
 << "ªt:" << 
ªt
 << 
ídl
;

464 
	`sqlôe3_föÆize
(
°mt
);

465 
	}
}

467 
boﬁ
 
	gMySqlôe
::
	$Begö
() {

468 
sqlôe3_°mt
 *
°mt
;

469 
°rög
 
	`quîy
("BEGIN");

470 
boﬁ
 
ªsu…
 = 
åue
;

472 
	`sqlôe3_¥ï¨e_v2
(
aDB
, 
quîy
.
	`c_°r
(), -1, &
°mt
, 
NULL
);

474 if(
	`sqlôe3_°ï
(
°mt
Ë!
SQLITE_DONE
) {

475 
	`fw¥ötf
(
°dîr
, 
L
"löê%d: %s\n", 
__LINE__
, 
	`sqlôe3_îrmsg16
(
aDB
));

476 
ªsu…
 = 
Ál£
;

479 
	`sqlôe3_ª£t
(
°mt
);

480 
	`sqlôe3_föÆize
(
°mt
);

482  
ªsu…
;

483 
	}
}

485 
boﬁ
 
	gMySqlôe
::
	$Commô
() {

486 
sqlôe3_°mt
 *
°mt
;

487 
°rög
 
	`quîy
("COMMIT");

488 
boﬁ
 
ªsu…
 = 
åue
;

490 
	`sqlôe3_¥ï¨e_v2
(
aDB
, 
quîy
.
	`c_°r
(), -1, &
°mt
, 
NULL
);

492 if(
	`sqlôe3_°ï
(
°mt
Ë!
SQLITE_DONE
) {

493 
	`fw¥ötf
(
°dîr
, 
L
"löê%d: %s\n", 
__LINE__
, 
	`sqlôe3_îrmsg16
(
aDB
));

494 
ªsu…
 = 
Ál£
;

497 
	`sqlôe3_ª£t
(
°mt
);

498 
	`sqlôe3_föÆize
(
°mt
);

500  
ªsu…
;

501 
	}
}

503 
boﬁ
 
	gMySqlôe
::
	$Rﬁlback
() {

504 
sqlôe3_°mt
 *
°mt
;

505 
°rög
 
	`quîy
("ROLLBACK");

506 
boﬁ
 
ªsu…
 = 
åue
;

508 
	`sqlôe3_¥ï¨e_v2
(
aDB
, 
quîy
.
	`c_°r
(), -1, &
°mt
, 
NULL
);

510 if(
	`sqlôe3_°ï
(
°mt
Ë!
SQLITE_DONE
) {

511 
	`fw¥ötf
(
°dîr
, 
L
"löê%d: %s\n", 
__LINE__
, 
	`sqlôe3_îrmsg16
(
aDB
));

512 
ªsu…
 = 
Ál£
;

515 
	`sqlôe3_ª£t
(
°mt
);

516 
	`sqlôe3_föÆize
(
°mt
);

518  
ªsu…
;

519 
	}
}

521 
boﬁ
 
	gMySqlôe
::
	$IsTabÀExi°
(
°rög
 
rTabÀName
) {

522 
sqlôe3_°mt
 *
°mt
;

523 
°rög
 
	`quîy
("SELECTÇame FROM sqlite_master WHEREÅype='table' ANDÇame='");

524 
boﬁ
 
ªsu…
;

526 
quîy
 +
rTabÀName
;

527 
quîy
 += "'";

529 
	`sqlôe3_¥ï¨e_v2
(
aDB
, 
quîy
.
	`c_°r
(), -1, &
°mt
, 
NULL
);

531 if(
	`sqlôe3_°ï
(
°mt
Ë=
SQLITE_ROW
) {

532 
ªsu…
 = 
åue
;

535 
ªsu…
 = 
Ál£
;

538 
	`sqlôe3_ª£t
(
°mt
);

539 
	`sqlôe3_föÆize
(
°mt
);

541  
ªsu…
;

542 
	}
}

	@mysqlite.h

1 #i‚de‡
__MYSQLITE_H__


2 
	#__MYSQLITE_H__


	)

4 
	~<°rög
>

5 
	~<sqlôe3.h
>

7 
usög
 
«me•a˚
 
	g°d
;

9 ˛as†
	cMySqlôe
 {

10 
	m¥iv©e
:

11 
sqlôe3
 *
aDB
;

13 
	mpublic
:

14 
boﬁ
 
O≥nDB
(* 
öput
);

15 
boﬁ
 
Clo£DB
();

16 
boﬁ
 
Cª©eTabÀ
(
cﬁNum
, * 
buf„r
);

17 
boﬁ
 
DñëeTabÀ
();

18 
FödD©a
();

19 
boﬁ
 
Up£πD©a
(* 
buf„r
);

20 
boﬁ
 
DñëeD©a
(
rID
);

21 
boﬁ
 
DñëeD©a
();

22 
°rög
 
GëD©a
(
rID
);

23 
PrötTabÀ
(* 
buf„r
);

25 
	m¥iv©e
:

26 
boﬁ
 
IsTabÀExi°
(
°rög
 
rTabÀName
);

27 
boﬁ
 
Begö
();

28 
boﬁ
 
Commô
();

29 
boﬁ
 
Rﬁlback
();

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_MPLS
 = 137,

89 
	#IPPROTO_MPLS
 
IPPROTO_MPLS


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


98 #i‚de‡
__USE_KERNEL_IPV6_DEFS


101 
	mIPPROTO_HOPOPTS
 = 0,

102 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

103 
	mIPPROTO_ROUTING
 = 43,

104 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

105 
	mIPPROTO_FRAGMENT
 = 44,

106 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

107 
	mIPPROTO_ICMPV6
 = 58,

108 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

109 
	mIPPROTO_NONE
 = 59,

110 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

111 
	mIPPROTO_DSTOPTS
 = 60,

112 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

113 
	mIPPROTO_MH
 = 135

114 
	#IPPROTO_MH
 
IPPROTO_MH


	)

119 
uöt16_t
 
	tö_p‹t_t
;

124 
	mIPPORT_ECHO
 = 7,

125 
	mIPPORT_DISCARD
 = 9,

126 
	mIPPORT_SYSTAT
 = 11,

127 
	mIPPORT_DAYTIME
 = 13,

128 
	mIPPORT_NETSTAT
 = 15,

129 
	mIPPORT_FTP
 = 21,

130 
	mIPPORT_TELNET
 = 23,

131 
	mIPPORT_SMTP
 = 25,

132 
	mIPPORT_TIMESERVER
 = 37,

133 
	mIPPORT_NAMESERVER
 = 42,

134 
	mIPPORT_WHOIS
 = 43,

135 
	mIPPORT_MTP
 = 57,

137 
	mIPPORT_TFTP
 = 69,

138 
	mIPPORT_RJE
 = 77,

139 
	mIPPORT_FINGER
 = 79,

140 
	mIPPORT_TTYLINK
 = 87,

141 
	mIPPORT_SUPDUP
 = 95,

144 
	mIPPORT_EXECSERVER
 = 512,

145 
	mIPPORT_LOGINSERVER
 = 513,

146 
	mIPPORT_CMDSERVER
 = 514,

147 
	mIPPORT_EFSSERVER
 = 520,

150 
	mIPPORT_BIFFUDP
 = 512,

151 
	mIPPORT_WHOSERVER
 = 513,

152 
	mIPPORT_ROUTESERVER
 = 520,

155 
	mIPPORT_RESERVED
 = 1024,

158 
	mIPPORT_USERRESERVED
 = 5000

166 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

167 
	#IN_CLASSA_NET
 0xff000000

	)

168 
	#IN_CLASSA_NSHIFT
 24

	)

169 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

170 
	#IN_CLASSA_MAX
 128

	)

172 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

173 
	#IN_CLASSB_NET
 0xffff0000

	)

174 
	#IN_CLASSB_NSHIFT
 16

	)

175 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

176 
	#IN_CLASSB_MAX
 65536

	)

178 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

179 
	#IN_CLASSC_NET
 0xffffff00

	)

180 
	#IN_CLASSC_NSHIFT
 8

	)

181 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

183 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

184 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

186 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

187 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

190 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

192 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

194 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

197 
	#IN_LOOPBACKNET
 127

	)

199 #i‚de‡
INADDR_LOOPBACK


200 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

204 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

205 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

206 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

207 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

209 #i‚de‡
__USE_KERNEL_IPV6_DEFS


211 
	sö6_addr


215 
uöt8_t
 
	m__u6_addr8
[16];

216 #ifde‡
__USE_MISC


217 
uöt16_t
 
	m__u6_addr16
[8];

218 
uöt32_t
 
	m__u6_addr32
[4];

220 } 
	m__ö6_u
;

221 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

222 #ifde‡
__USE_MISC


223 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

224 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

229 c⁄° 
ö6_addr
 
ö6addr_™y
;

230 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

231 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

232 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

234 
	#INET_ADDRSTRLEN
 16

	)

235 
	#INET6_ADDRSTRLEN
 46

	)

239 
	ssockaddr_ö


241 
__SOCKADDR_COMMON
 (
sö_
);

242 
ö_p‹t_t
 
	msö_p‹t
;

243 
ö_addr
 
	msö_addr
;

246 
	msö_zîo
[ (
sockaddr
) -

247 
__SOCKADDR_COMMON_SIZE
 -

248  (
ö_p‹t_t
) -

249  (
ö_addr
)];

252 #i‚de‡
__USE_KERNEL_IPV6_DEFS


254 
	ssockaddr_ö6


256 
__SOCKADDR_COMMON
 (
sö6_
);

257 
ö_p‹t_t
 
	msö6_p‹t
;

258 
uöt32_t
 
	msö6_Êowöfo
;

259 
ö6_addr
 
	msö6_addr
;

260 
uöt32_t
 
	msö6_sc›e_id
;

264 #ifde‡
__USE_MISC


266 
	sù_mªq


269 
ö_addr
 
	mimr_mu…üddr
;

272 
ö_addr
 
	mimr_öãrÁ˚
;

275 
	sù_mªq_sour˚


278 
ö_addr
 
	mimr_mu…üddr
;

281 
ö_addr
 
	mimr_öãrÁ˚
;

284 
ö_addr
 
	mimr_sour˚addr
;

288 #i‚de‡
__USE_KERNEL_IPV6_DEFS


290 
	sùv6_mªq


293 
ö6_addr
 
	mùv6mr_mu…üddr
;

296 
	mùv6mr_öãrÁ˚
;

300 #ifde‡
__USE_MISC


302 
	sgroup_ªq


305 
uöt32_t
 
	mgr_öãrÁ˚
;

308 
sockaddr_°‹age
 
	mgr_group
;

311 
	sgroup_sour˚_ªq


314 
uöt32_t
 
	mg§_öãrÁ˚
;

317 
sockaddr_°‹age
 
	mg§_group
;

320 
sockaddr_°‹age
 
	mg§_sour˚
;

325 
	sù_msfûãr


328 
ö_addr
 
	mimsf_mu…üddr
;

331 
ö_addr
 
	mimsf_öãrÁ˚
;

334 
uöt32_t
 
	mimsf_fmode
;

337 
uöt32_t
 
	mimsf_num§c
;

339 
ö_addr
 
	mimsf_¶i°
[1];

342 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

343 -  (
ö_addr
) \

344 + (
num§c
Ë*  (
ö_addr
))

	)

346 
	sgroup_fûãr


349 
uöt32_t
 
	mgf_öãrÁ˚
;

352 
sockaddr_°‹age
 
	mgf_group
;

355 
uöt32_t
 
	mgf_fmode
;

358 
uöt32_t
 
	mgf_num§c
;

360 
sockaddr_°‹age
 
	mgf_¶i°
[1];

363 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

364 -  (
sockaddr_°‹age
) \

365 + ((
num§c
) \

366 *  (
sockaddr_°‹age
)))

	)

376 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

381 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

382 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

384 
	~<ídün.h
>

387 
	~<bôs/byãsw≠.h
>

389 #ifde‡
__OPTIMIZE__


393 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


396 
	#¡ohl
(
x
Ë(x)

	)

397 
	#¡ohs
(
x
Ë(x)

	)

398 
	#ht⁄l
(
x
Ë(x)

	)

399 
	#ht⁄s
(
x
Ë(x)

	)

401 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


402 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

404 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

405 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

410 #ifde‡
__GNUC__


411 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

412 (
__exãnsi⁄__
 \

413 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

414 
__a
->
s6_addr32
[0] == 0 \

415 && 
__a
->
s6_addr32
[1] == 0 \

416 && 
__a
->
s6_addr32
[2] == 0 \

417 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

419 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

420 (
__exãnsi⁄__
 \

421 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

422 
__a
->
s6_addr32
[0] == 0 \

423 && 
__a
->
s6_addr32
[1] == 0 \

424 && 
__a
->
s6_addr32
[2] == 0 \

425 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

427 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

428 (
__exãnsi⁄__
 \

429 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

430 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

432 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

433 (
__exãnsi⁄__
 \

434 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

435 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

437 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

438 (
__exãnsi⁄__
 \

439 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

440 
__a
->
s6_addr32
[0] == 0 \

441 && 
__a
->
s6_addr32
[1] == 0 \

442 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

444 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

445 (
__exãnsi⁄__
 \

446 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

447 
__a
->
s6_addr32
[0] == 0 \

448 && 
__a
->
s6_addr32
[1] == 0 \

449 && 
__a
->
s6_addr32
[2] == 0 \

450 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

452 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

453 (
__exãnsi⁄__
 \

454 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

455 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

456 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

457 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

458 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

459 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

461 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

462 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

464 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

465 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

467 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

468 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

470 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

471 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

473 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

474 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

475 =
	`ht⁄l
 (0x„800000))

	)

477 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

478 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

479 =
	`ht⁄l
 (0x„c00000))

	)

481 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

482 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

483 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

484 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

486 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

487 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

488 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

489 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

490 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

492 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

493 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

495 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

496 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

499 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

501 #ifde‡
__USE_MISC


503 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

506 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

507 
__THROW
;

511 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

512 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

513 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

515 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

516 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

517 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

519 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

520 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

521 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

523 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

524 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

525 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

527 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

528 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

529 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

532 #ifde‡
__USE_GNU


533 
cmsghdr
;

535 #i‚de‡
__USE_KERNEL_IPV6_DEFS


537 
	sö6_pktöfo


539 
ö6_addr
 
ùi6_addr
;

540 
ùi6_ifödex
;

544 
	sù6_mtuöfo


546 
sockaddr_ö6
 
ù6m_addr
;

547 
uöt32_t
 
ù6m_mtu
;

552 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

554 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

555 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

557 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

558 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

559 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

560 
__mu…x
, 
__∂usy
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

565 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

566 
uöt8_t
 **
__çåp
, 
__ty≥
)

567 
__THROW
 
__©åibuã_dïªˇãd__
;

571 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

572 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

573 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

574 **
__d©abuÂ
Ë
__THROW
;

575 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

576 
__THROW
;

577 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

578 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

579 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

583 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

584 **
__d©abuÂ
Ë
__THROW
;

585 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

586 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

590 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

591 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

592 
__£gmíts
Ë
__THROW
;

593 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

594 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

595 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

596 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

597 
__THROW
;

603 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

604 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

605 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

606 
__THROW
;

609 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

610 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

611 
uöt32_t
 
__num§c
,

612 c⁄° 
ö_addr
 *
__¶i°
)

613 
__THROW
;

617 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

618 c⁄° 
sockaddr
 *
__group
,

619 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

620 
uöt32_t
 *
__num§c
,

621 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

624 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

625 c⁄° 
sockaddr
 *
__group
,

626 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

627 
uöt32_t
 
__num§c
,

628 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

631 
__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


85 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


86 
	#PTHREAD_MUTEX_INITIALIZER
 \

87 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

88 #ifde‡
__USE_GNU


89 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

90 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

91 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

92 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

93 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

94 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

113 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


116 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

119 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


125 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


126 #i‡
__WORDSIZE
 == 64

127 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

132 
	#PTHREAD_RWLOCK_INITIALIZER
 \

133 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

134 #ifde‡
__USE_GNU


135 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


136 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, \

138 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

140 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


141 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

142 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

143 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

145 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

146 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

147 0 } }

	)

157 
	mPTHREAD_INHERIT_SCHED
,

158 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

159 
	mPTHREAD_EXPLICIT_SCHED


160 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

167 
	mPTHREAD_SCOPE_SYSTEM
,

168 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

169 
	mPTHREAD_SCOPE_PROCESS


170 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

177 
	mPTHREAD_PROCESS_PRIVATE
,

178 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

179 
	mPTHREAD_PROCESS_SHARED


180 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

186 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

190 
	s_±hªad_˛ónup_buf„r


192 (*
	m__routöe
) (*);

193 *
	m__¨g
;

194 
	m__ˇn˚…y≥
;

195 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

201 
	mPTHREAD_CANCEL_ENABLE
,

202 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

203 
	mPTHREAD_CANCEL_DISABLE


204 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

208 
	mPTHREAD_CANCEL_DEFERRED
,

209 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

210 
	mPTHREAD_CANCEL_ASYNCHRONOUS


211 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

213 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

217 
	#PTHREAD_ONCE_INIT
 0

	)

220 #ifde‡
__USE_XOPEN2K


224 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

228 
__BEGIN_DECLS


233 
	$±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

234 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

235 *(*
__°¨t_routöe
) (*),

236 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

242 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

250 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

252 #ifde‡
__USE_GNU


255 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

263 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

264 c⁄° 
time•ec
 *
__ab°ime
);

271 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

275 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

278 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

279 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

287 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

291 
__THROW
 
	`__n⁄nuŒ
 ((1));

294 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

295 *
__dëach°©e
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

299 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

300 
__dëach°©e
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 
size_t
 *
__gu¨dsize
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

311 
size_t
 
__gu¨dsize
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

317 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

322 c⁄° 
sched_∑øm
 *
__ª°ri˘


323 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

326 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


327 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

331 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

332 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


336 
__©å
, *
__ª°ri˘
 
__öhîô
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

340 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

341 
__öhîô
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

347 *
__ª°ri˘
 
__sc›e
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


356 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

363 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

364 *
__°ackaddr
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

368 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


369 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

370 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

375 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

376 
size_t
 
__°acksize
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1));

379 #ifde‡
__USE_XOPEN2K


381 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

382 **
__ª°ri˘
 
__°ackaddr
,

383 
size_t
 *
__ª°ri˘
 
__°acksize
)

384 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

389 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

390 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 #ifde‡
__USE_GNU


396 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

397 
size_t
 
__˝u£tsize
,

398 c⁄° 
˝u_£t_t
 *
__˝u£t
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

403 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

404 
size_t
 
__˝u£tsize
,

405 
˝u_£t_t
 *
__˝u£t
)

406 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

409 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1));

414 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

415 
__THROW
 
	`__n⁄nuŒ
 ((1));

420 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

430 c⁄° 
sched_∑øm
 *
__∑øm
)

431 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

435 *
__ª°ri˘
 
__pﬁicy
,

436 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

441 
__THROW
;

444 #ifde‡
__USE_GNU


446 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

447 
size_t
 
__buÊí
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

452 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 #ifde‡
__USE_UNIX98


458 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

461 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

464 #ifde‡
__USE_GNU


469 
	$±hªad_yõld
 (Ë
__THROW
;

474 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

475 c⁄° 
˝u_£t_t
 *
__˝u£t
)

476 
__THROW
 
	`__n⁄nuŒ
 ((3));

479 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

480 
˝u_£t_t
 *
__˝u£t
)

481 
__THROW
 
	`__n⁄nuŒ
 ((3));

494 
	$±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

495 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

506 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

510 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

513 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

518 
	`±hªad_ã°ˇn˚l
 ();

527 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

528 
__mask_was_ßved
;

529 } 
__ˇn˚l_jmp_buf
[1];

530 *
__∑d
[4];

531 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

534 #i‚de‡
__˛ónup_f˘_©åibuã


535 
	#__˛ónup_f˘_©åibuã


	)

540 
	s__±hªad_˛ónup_‰ame


542 (*
__ˇn˚l_routöe
) (*);

543 *
__ˇn˚l_¨g
;

544 
__do_ô
;

545 
__ˇn˚l_ty≥
;

548 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


549 #ifde‡
__˝lu•lus


551 ˛as†
	c__±hªad_˛ónup_˛ass


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

558 
public
:

559 
	$__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

560 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

561 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

562 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

563 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

564 &
__ˇn˚l_ty≥
); 
	}
}

565 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

575 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

577 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

581 
	#±hªad_˛ónup_p›
(
execuã
) \

582 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

583 } 0)

	)

585 #ifde‡
__USE_GNU


589 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

591 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

592 
__˛‰ame
.
	`__de„r
 ()

	)

597 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

598 
__˛‰ame
.
	`__ª°‹e
 (); \

599 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

600 } 0)

	)

607 
__exã∫_ölöe
 

608 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

610 i‡(
__‰ame
->
__do_ô
)

611 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

612 
	}
}

621 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

623 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

624 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

625 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

626 .
__do_ô
 = 1 };

	)

630 
	#±hªad_˛ónup_p›
(
execuã
) \

631 
__˛‰ame
.
__do_ô
 = (
execuã
); \

632 } 0)

	)

634 #ifde‡
__USE_GNU


638 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

640 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

641 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

642 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

643 .
__do_ô
 = 1 }; \

644 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

645 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

650 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

651 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

652 
__˛‰ame
.
__do_ô
 = (
execuã
); \

653 } 0)

	)

664 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

666 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

667 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

668 *
__ˇn˚l_¨g
 = (
¨g
); \

669 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

670 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

671 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

673 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

674 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

678 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

679 dÿ{

	)

680 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

681 
__˛ónup_f˘_©åibuã
;

685 
	#±hªad_˛ónup_p›
(
execuã
) \

688 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

689 i‡(
execuã
) \

690 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

691 } 0)

	)

692 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

693 
__˛ónup_f˘_©åibuã
;

695 #ifde‡
__USE_GNU


699 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

701 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

702 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

703 *
__ˇn˚l_¨g
 = (
¨g
); \

704 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

705 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

706 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

708 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

709 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

713 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

714 dÿ{

	)

715 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

716 
__˛ónup_f˘_©åibuã
;

721 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

724 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

725 i‡(
execuã
) \

726 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

727 
	}
} 0)

	)

728 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

729 
__˛ónup_f˘_©åibuã
;

733 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

734 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

735 #i‚de‡
SHARED


736 
	`__©åibuã__
 ((
__wók__
))

742 
__jmp_buf_èg
;

743 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

749 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

750 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

751 
__THROW
 
	`__n⁄nuŒ
 ((1));

754 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

755 
__THROW
 
	`__n⁄nuŒ
 ((1));

758 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

759 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

763 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

765 #ifde‡
__USE_XOPEN2K


767 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

768 c⁄° 
time•ec
 *
__ª°ri˘


769 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

773 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

778 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

779 
__ª°ri˘
 
__muãx
,

780 *
__ª°ri˘
 
__¥io˚ûög
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

785 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

786 
__¥io˚ûög
,

787 *
__ª°ri˘
 
__ﬁd_˚ûög
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

791 #ifde‡
__USE_XOPEN2K8


793 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1));

795 #ifde‡
__USE_GNU


796 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

797 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1));

810 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1));

814 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

815 
__ª°ri˘
 
__©å
,

816 *
__ª°ri˘
 
__psh¨ed
)

817 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__psh¨ed
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

824 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


826 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


827 
__©å
, *
__ª°ri˘
 
__köd
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

833 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1));

838 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

839 
__ª°ri˘
 
__©å
,

840 *
__ª°ri˘
 
__¥Ÿocﬁ
)

841 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

845 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

846 
__¥Ÿocﬁ
)

847 
__THROW
 
	`__n⁄nuŒ
 ((1));

850 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

851 
__ª°ri˘
 
__©å
,

852 *
__ª°ri˘
 
__¥io˚ûög
)

853 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥io˚ûög
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

860 #ifde‡
__USE_XOPEN2K


862 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

863 *
__robu°√ss
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

865 #ifde‡
__USE_GNU


866 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

867 *
__robu°√ss
)

868 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

872 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

873 
__robu°√ss
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

875 #ifde‡
__USE_GNU


876 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

877 
__robu°√ss
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


888 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

889 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


890 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

893 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

894 
__THROW
 
	`__n⁄nuŒ
 ((1));

897 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

898 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

901 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

902 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

904 #ifde‡
__USE_XOPEN2K


906 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

907 c⁄° 
time•ec
 *
__ª°ri˘


908 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

912 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

916 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

917 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

919 #ifde‡
__USE_XOPEN2K


921 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

922 c⁄° 
time•ec
 *
__ª°ri˘


923 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

927 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

934 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

938 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

939 
__THROW
 
	`__n⁄nuŒ
 ((1));

942 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

943 
__ª°ri˘
 
__©å
,

944 *
__ª°ri˘
 
__psh¨ed
)

945 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

948 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

949 
__psh¨ed
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__¥ef
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

968 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

969 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

970 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

974 
__THROW
 
	`__n⁄nuŒ
 ((1));

977 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

978 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

981 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

982 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

989 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

990 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

991 
	`__n⁄nuŒ
 ((1, 2));

1000 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1002 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1003 
	`__n⁄nuŒ
 ((1, 2, 3));

1008 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1));

1012 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1013 
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1017 
__ª°ri˘
 
__©å
,

1018 *
__ª°ri˘
 
__psh¨ed
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1022 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1023 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1025 #ifde‡
__USE_XOPEN2K


1027 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__˛ockid_t
 
__˛ock_id
)

1035 
__THROW
 
	`__n⁄nuŒ
 ((1));

1039 #ifde‡
__USE_XOPEN2K


1044 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1048 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1049 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1053 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1056 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1057 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1060 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1061 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1068 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1069 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1070 
__©å
, 
__cou¡
)

1071 
__THROW
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1079 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1083 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1084 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1088 
__THROW
 
	`__n⁄nuŒ
 ((1));

1091 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1092 
__ª°ri˘
 
__©å
,

1093 *
__ª°ri˘
 
__psh¨ed
)

1094 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1097 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1098 
__psh¨ed
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1111 
	$±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1112 (*
__de°r_fun˘i⁄
) (*))

1113 
__THROW
 
	`__n⁄nuŒ
 ((1));

1116 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1119 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1122 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1123 c⁄° *
__poöãr
Ë
__THROW
 ;

1126 #ifde‡
__USE_XOPEN2K


1128 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1129 
__˛ockid_t
 *
__˛ock_id
)

1130 
__THROW
 
	`__n⁄nuŒ
 ((2));

1145 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1146 (*
__∑ª¡
) (),

1147 (*
__chûd
Ë()Ë
__THROW
;

1150 #ifde‡
__USE_EXTERN_INLINES


1152 
__exã∫_ölöe
 

1153 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1155  
__thªad1
 =
__thªad2
;

1156 
	}
}

1159 
	g__END_DECLS


	@/usr/include/sqlite3.h

33 #i‚de‡
_SQLITE3_H_


34 
	#_SQLITE3_H_


	)

35 
	~<°d¨g.h
>

40 #ifde‡
__˝lu•lus


48 #i‚de‡
SQLITE_EXTERN


49 
	#SQLITE_EXTERN
 

	)

51 #i‚de‡
SQLITE_API


52 
	#SQLITE_API


	)

54 #i‚de‡
SQLITE_CDECL


55 
	#SQLITE_CDECL


	)

57 #i‚de‡
SQLITE_STDCALL


58 
	#SQLITE_STDCALL


	)

74 
	#SQLITE_DEPRECATED


	)

75 
	#SQLITE_EXPERIMENTAL


	)

80 #ifde‡
SQLITE_VERSION


81 #unde‡
SQLITE_VERSION


83 #ifde‡
SQLITE_VERSION_NUMBER


84 #unde‡
SQLITE_VERSION_NUMBER


114 
	#SQLITE_VERSION
 "3.11.0"

	)

115 
	#SQLITE_VERSION_NUMBER
 3011000

	)

116 
	#SQLITE_SOURCE_ID
 "2016-02-15 17:29:24 3d862f207e3adc00f78066799ac5a8c282430a5f"

	)

148 
SQLITE_API
 
SQLITE_EXTERN
 c⁄° 
sqlôe3_vîsi⁄
[];

149 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_libvîsi⁄
();

150 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_sour˚id
();

151 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_libvîsi⁄_numbî
();

175 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


176 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_compûe›ti⁄_u£d
(c⁄° *
zO±Name
);

177 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_compûe›ti⁄_gë
(
N
);

216 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_thªadß„
();

232 
sqlôe3
 
	tsqlôe3
;

250 #ifde‡
SQLITE_INT64_TYPE


251 
SQLITE_INT64_TYPE
 
	tsqlôe_öt64
;

252 
	tSQLITE_INT64_TYPE
 
	tsqlôe_uöt64
;

253 #ñi‡
deföed
(
_MSC_VER
Ë|| deföed(
__BORLANDC__
)

254 
__öt64
 
	tsqlôe_öt64
;

255 
	t__öt64
 
	tsqlôe_uöt64
;

257 
	tsqlôe_öt64
;

258 
	tsqlôe_uöt64
;

260 
sqlôe_öt64
 
	tsqlôe3_öt64
;

261 
sqlôe_uöt64
 
	tsqlôe3_uöt64
;

267 #ifde‡
SQLITE_OMIT_FLOATING_POINT


268 
sqlôe3_öt64


	)

313 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_˛o£
(
sqlôe3
*);

314 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_˛o£_v2
(
sqlôe3
*);

321 (*
sqlôe3_ˇŒback
)(*,,**, **);

385 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_exec
(

386 
sqlôe3
*,

387 c⁄° *
sql
,

388 (*
ˇŒback
)(*,,**,**),

390 **
îrmsg


404 
	#SQLITE_OK
 0

	)

406 
	#SQLITE_ERROR
 1

	)

407 
	#SQLITE_INTERNAL
 2

	)

408 
	#SQLITE_PERM
 3

	)

409 
	#SQLITE_ABORT
 4

	)

410 
	#SQLITE_BUSY
 5

	)

411 
	#SQLITE_LOCKED
 6

	)

412 
	#SQLITE_NOMEM
 7

	)

413 
	#SQLITE_READONLY
 8

	)

414 
	#SQLITE_INTERRUPT
 9

	)

415 
	#SQLITE_IOERR
 10

	)

416 
	#SQLITE_CORRUPT
 11

	)

417 
	#SQLITE_NOTFOUND
 12

	)

418 
	#SQLITE_FULL
 13

	)

419 
	#SQLITE_CANTOPEN
 14

	)

420 
	#SQLITE_PROTOCOL
 15

	)

421 
	#SQLITE_EMPTY
 16

	)

422 
	#SQLITE_SCHEMA
 17

	)

423 
	#SQLITE_TOOBIG
 18

	)

424 
	#SQLITE_CONSTRAINT
 19

	)

425 
	#SQLITE_MISMATCH
 20

	)

426 
	#SQLITE_MISUSE
 21

	)

427 
	#SQLITE_NOLFS
 22

	)

428 
	#SQLITE_AUTH
 23

	)

429 
	#SQLITE_FORMAT
 24

	)

430 
	#SQLITE_RANGE
 25

	)

431 
	#SQLITE_NOTADB
 26

	)

432 
	#SQLITE_NOTICE
 27

	)

433 
	#SQLITE_WARNING
 28

	)

434 
	#SQLITE_ROW
 100

	)

435 
	#SQLITE_DONE
 101

	)

454 
	#SQLITE_IOERR_READ
 (
SQLITE_IOERR
 | (1<<8))

	)

455 
	#SQLITE_IOERR_SHORT_READ
 (
SQLITE_IOERR
 | (2<<8))

	)

456 
	#SQLITE_IOERR_WRITE
 (
SQLITE_IOERR
 | (3<<8))

	)

457 
	#SQLITE_IOERR_FSYNC
 (
SQLITE_IOERR
 | (4<<8))

	)

458 
	#SQLITE_IOERR_DIR_FSYNC
 (
SQLITE_IOERR
 | (5<<8))

	)

459 
	#SQLITE_IOERR_TRUNCATE
 (
SQLITE_IOERR
 | (6<<8))

	)

460 
	#SQLITE_IOERR_FSTAT
 (
SQLITE_IOERR
 | (7<<8))

	)

461 
	#SQLITE_IOERR_UNLOCK
 (
SQLITE_IOERR
 | (8<<8))

	)

462 
	#SQLITE_IOERR_RDLOCK
 (
SQLITE_IOERR
 | (9<<8))

	)

463 
	#SQLITE_IOERR_DELETE
 (
SQLITE_IOERR
 | (10<<8))

	)

464 
	#SQLITE_IOERR_BLOCKED
 (
SQLITE_IOERR
 | (11<<8))

	)

465 
	#SQLITE_IOERR_NOMEM
 (
SQLITE_IOERR
 | (12<<8))

	)

466 
	#SQLITE_IOERR_ACCESS
 (
SQLITE_IOERR
 | (13<<8))

	)

467 
	#SQLITE_IOERR_CHECKRESERVEDLOCK
 (
SQLITE_IOERR
 | (14<<8))

	)

468 
	#SQLITE_IOERR_LOCK
 (
SQLITE_IOERR
 | (15<<8))

	)

469 
	#SQLITE_IOERR_CLOSE
 (
SQLITE_IOERR
 | (16<<8))

	)

470 
	#SQLITE_IOERR_DIR_CLOSE
 (
SQLITE_IOERR
 | (17<<8))

	)

471 
	#SQLITE_IOERR_SHMOPEN
 (
SQLITE_IOERR
 | (18<<8))

	)

472 
	#SQLITE_IOERR_SHMSIZE
 (
SQLITE_IOERR
 | (19<<8))

	)

473 
	#SQLITE_IOERR_SHMLOCK
 (
SQLITE_IOERR
 | (20<<8))

	)

474 
	#SQLITE_IOERR_SHMMAP
 (
SQLITE_IOERR
 | (21<<8))

	)

475 
	#SQLITE_IOERR_SEEK
 (
SQLITE_IOERR
 | (22<<8))

	)

476 
	#SQLITE_IOERR_DELETE_NOENT
 (
SQLITE_IOERR
 | (23<<8))

	)

477 
	#SQLITE_IOERR_MMAP
 (
SQLITE_IOERR
 | (24<<8))

	)

478 
	#SQLITE_IOERR_GETTEMPPATH
 (
SQLITE_IOERR
 | (25<<8))

	)

479 
	#SQLITE_IOERR_CONVPATH
 (
SQLITE_IOERR
 | (26<<8))

	)

480 
	#SQLITE_IOERR_VNODE
 (
SQLITE_IOERR
 | (27<<8))

	)

481 
	#SQLITE_IOERR_AUTH
 (
SQLITE_IOERR
 | (28<<8))

	)

482 
	#SQLITE_LOCKED_SHAREDCACHE
 (
SQLITE_LOCKED
 | (1<<8))

	)

483 
	#SQLITE_BUSY_RECOVERY
 (
SQLITE_BUSY
 | (1<<8))

	)

484 
	#SQLITE_BUSY_SNAPSHOT
 (
SQLITE_BUSY
 | (2<<8))

	)

485 
	#SQLITE_CANTOPEN_NOTEMPDIR
 (
SQLITE_CANTOPEN
 | (1<<8))

	)

486 
	#SQLITE_CANTOPEN_ISDIR
 (
SQLITE_CANTOPEN
 | (2<<8))

	)

487 
	#SQLITE_CANTOPEN_FULLPATH
 (
SQLITE_CANTOPEN
 | (3<<8))

	)

488 
	#SQLITE_CANTOPEN_CONVPATH
 (
SQLITE_CANTOPEN
 | (4<<8))

	)

489 
	#SQLITE_CORRUPT_VTAB
 (
SQLITE_CORRUPT
 | (1<<8))

	)

490 
	#SQLITE_READONLY_RECOVERY
 (
SQLITE_READONLY
 | (1<<8))

	)

491 
	#SQLITE_READONLY_CANTLOCK
 (
SQLITE_READONLY
 | (2<<8))

	)

492 
	#SQLITE_READONLY_ROLLBACK
 (
SQLITE_READONLY
 | (3<<8))

	)

493 
	#SQLITE_READONLY_DBMOVED
 (
SQLITE_READONLY
 | (4<<8))

	)

494 
	#SQLITE_ABORT_ROLLBACK
 (
SQLITE_ABORT
 | (2<<8))

	)

495 
	#SQLITE_CONSTRAINT_CHECK
 (
SQLITE_CONSTRAINT
 | (1<<8))

	)

496 
	#SQLITE_CONSTRAINT_COMMITHOOK
 (
SQLITE_CONSTRAINT
 | (2<<8))

	)

497 
	#SQLITE_CONSTRAINT_FOREIGNKEY
 (
SQLITE_CONSTRAINT
 | (3<<8))

	)

498 
	#SQLITE_CONSTRAINT_FUNCTION
 (
SQLITE_CONSTRAINT
 | (4<<8))

	)

499 
	#SQLITE_CONSTRAINT_NOTNULL
 (
SQLITE_CONSTRAINT
 | (5<<8))

	)

500 
	#SQLITE_CONSTRAINT_PRIMARYKEY
 (
SQLITE_CONSTRAINT
 | (6<<8))

	)

501 
	#SQLITE_CONSTRAINT_TRIGGER
 (
SQLITE_CONSTRAINT
 | (7<<8))

	)

502 
	#SQLITE_CONSTRAINT_UNIQUE
 (
SQLITE_CONSTRAINT
 | (8<<8))

	)

503 
	#SQLITE_CONSTRAINT_VTAB
 (
SQLITE_CONSTRAINT
 | (9<<8))

	)

504 
	#SQLITE_CONSTRAINT_ROWID
 (
SQLITE_CONSTRAINT
 |(10<<8))

	)

505 
	#SQLITE_NOTICE_RECOVER_WAL
 (
SQLITE_NOTICE
 | (1<<8))

	)

506 
	#SQLITE_NOTICE_RECOVER_ROLLBACK
 (
SQLITE_NOTICE
 | (2<<8))

	)

507 
	#SQLITE_WARNING_AUTOINDEX
 (
SQLITE_WARNING
 | (1<<8))

	)

508 
	#SQLITE_AUTH_USER
 (
SQLITE_AUTH
 | (1<<8))

	)

517 
	#SQLITE_OPEN_READONLY
 0x00000001

	)

518 
	#SQLITE_OPEN_READWRITE
 0x00000002

	)

519 
	#SQLITE_OPEN_CREATE
 0x00000004

	)

520 
	#SQLITE_OPEN_DELETEONCLOSE
 0x00000008

	)

521 
	#SQLITE_OPEN_EXCLUSIVE
 0x00000010

	)

522 
	#SQLITE_OPEN_AUTOPROXY
 0x00000020

	)

523 
	#SQLITE_OPEN_URI
 0x00000040

	)

524 
	#SQLITE_OPEN_MEMORY
 0x00000080

	)

525 
	#SQLITE_OPEN_MAIN_DB
 0x00000100

	)

526 
	#SQLITE_OPEN_TEMP_DB
 0x00000200

	)

527 
	#SQLITE_OPEN_TRANSIENT_DB
 0x00000400

	)

528 
	#SQLITE_OPEN_MAIN_JOURNAL
 0x00000800

	)

529 
	#SQLITE_OPEN_TEMP_JOURNAL
 0x00001000

	)

530 
	#SQLITE_OPEN_SUBJOURNAL
 0x00002000

	)

531 
	#SQLITE_OPEN_MASTER_JOURNAL
 0x00004000

	)

532 
	#SQLITE_OPEN_NOMUTEX
 0x00008000

	)

533 
	#SQLITE_OPEN_FULLMUTEX
 0x00010000

	)

534 
	#SQLITE_OPEN_SHAREDCACHE
 0x00020000

	)

535 
	#SQLITE_OPEN_PRIVATECACHE
 0x00040000

	)

536 
	#SQLITE_OPEN_WAL
 0x00080000

	)

568 
	#SQLITE_IOCAP_ATOMIC
 0x00000001

	)

569 
	#SQLITE_IOCAP_ATOMIC512
 0x00000002

	)

570 
	#SQLITE_IOCAP_ATOMIC1K
 0x00000004

	)

571 
	#SQLITE_IOCAP_ATOMIC2K
 0x00000008

	)

572 
	#SQLITE_IOCAP_ATOMIC4K
 0x00000010

	)

573 
	#SQLITE_IOCAP_ATOMIC8K
 0x00000020

	)

574 
	#SQLITE_IOCAP_ATOMIC16K
 0x00000040

	)

575 
	#SQLITE_IOCAP_ATOMIC32K
 0x00000080

	)

576 
	#SQLITE_IOCAP_ATOMIC64K
 0x00000100

	)

577 
	#SQLITE_IOCAP_SAFE_APPEND
 0x00000200

	)

578 
	#SQLITE_IOCAP_SEQUENTIAL
 0x00000400

	)

579 
	#SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN
 0x00000800

	)

580 
	#SQLITE_IOCAP_POWERSAFE_OVERWRITE
 0x00001000

	)

581 
	#SQLITE_IOCAP_IMMUTABLE
 0x00002000

	)

590 
	#SQLITE_LOCK_NONE
 0

	)

591 
	#SQLITE_LOCK_SHARED
 1

	)

592 
	#SQLITE_LOCK_RESERVED
 2

	)

593 
	#SQLITE_LOCK_PENDING
 3

	)

594 
	#SQLITE_LOCK_EXCLUSIVE
 4

	)

622 
	#SQLITE_SYNC_NORMAL
 0x00002

	)

623 
	#SQLITE_SYNC_FULL
 0x00003

	)

624 
	#SQLITE_SYNC_DATAONLY
 0x00010

	)

637 
sqlôe3_fûe
 
	tsqlôe3_fûe
;

638 
	ssqlôe3_fûe
 {

639 c⁄° 
sqlôe3_io_mëhods
 *
pMëhods
;

732 
sqlôe3_io_mëhods
 
	tsqlôe3_io_mëhods
;

733 
	ssqlôe3_io_mëhods
 {

734 
iVîsi⁄
;

735 (*
xClo£
)(
sqlôe3_fûe
*);

736 (*
xRód
)(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

737 (*
xWrôe
)(
sqlôe3_fûe
*, c⁄° *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

738 (*
xTrunˇã
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

739 (*
xSync
)(
sqlôe3_fûe
*, 
Êags
);

740 (*
xFûeSize
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

741 (*
xLock
)(
sqlôe3_fûe
*, );

742 (*
xU∆ock
)(
sqlôe3_fûe
*, );

743 (*
xCheckRe£rvedLock
)(
sqlôe3_fûe
*, *
pResOut
);

744 (*
xFûeC⁄åﬁ
)(
sqlôe3_fûe
*, 
›
, *
pArg
);

745 (*
xSe˘‹Size
)(
sqlôe3_fûe
*);

746 (*
xDevi˚Ch¨a˘îi°ics
)(
sqlôe3_fûe
*);

748 (*
xShmM≠
)(
sqlôe3_fûe
*, 
iPg
, 
pgsz
, , volatile**);

749 (*
xShmLock
)(
sqlôe3_fûe
*, 
off£t
, 
n
, 
Êags
);

750 (*
xShmB¨rõr
)(
sqlôe3_fûe
*);

751 (*
xShmUnm≠
)(
sqlôe3_fûe
*, 
dñëeFœg
);

753 (*
xFëch
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
iOf°
, 
iAmt
, **
µ
);

754 (*
xUn„tch
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
iOf°
, *
p
);

992 
	#SQLITE_FCNTL_LOCKSTATE
 1

	)

993 
	#SQLITE_FCNTL_GET_LOCKPROXYFILE
 2

	)

994 
	#SQLITE_FCNTL_SET_LOCKPROXYFILE
 3

	)

995 
	#SQLITE_FCNTL_LAST_ERRNO
 4

	)

996 
	#SQLITE_FCNTL_SIZE_HINT
 5

	)

997 
	#SQLITE_FCNTL_CHUNK_SIZE
 6

	)

998 
	#SQLITE_FCNTL_FILE_POINTER
 7

	)

999 
	#SQLITE_FCNTL_SYNC_OMITTED
 8

	)

1000 
	#SQLITE_FCNTL_WIN32_AV_RETRY
 9

	)

1001 
	#SQLITE_FCNTL_PERSIST_WAL
 10

	)

1002 
	#SQLITE_FCNTL_OVERWRITE
 11

	)

1003 
	#SQLITE_FCNTL_VFSNAME
 12

	)

1004 
	#SQLITE_FCNTL_POWERSAFE_OVERWRITE
 13

	)

1005 
	#SQLITE_FCNTL_PRAGMA
 14

	)

1006 
	#SQLITE_FCNTL_BUSYHANDLER
 15

	)

1007 
	#SQLITE_FCNTL_TEMPFILENAME
 16

	)

1008 
	#SQLITE_FCNTL_MMAP_SIZE
 18

	)

1009 
	#SQLITE_FCNTL_TRACE
 19

	)

1010 
	#SQLITE_FCNTL_HAS_MOVED
 20

	)

1011 
	#SQLITE_FCNTL_SYNC
 21

	)

1012 
	#SQLITE_FCNTL_COMMIT_PHASETWO
 22

	)

1013 
	#SQLITE_FCNTL_WIN32_SET_HANDLE
 23

	)

1014 
	#SQLITE_FCNTL_WAL_BLOCK
 24

	)

1015 
	#SQLITE_FCNTL_ZIPVFS
 25

	)

1016 
	#SQLITE_FCNTL_RBU
 26

	)

1017 
	#SQLITE_FCNTL_VFS_POINTER
 27

	)

1018 
	#SQLITE_FCNTL_JOURNAL_POINTER
 28

	)

1021 
	#SQLITE_GET_LOCKPROXYFILE
 
SQLITE_FCNTL_GET_LOCKPROXYFILE


	)

1022 
	#SQLITE_SET_LOCKPROXYFILE
 
SQLITE_FCNTL_SET_LOCKPROXYFILE


	)

1023 
	#SQLITE_LAST_ERRNO
 
SQLITE_FCNTL_LAST_ERRNO


	)

1036 
sqlôe3_muãx
 
	tsqlôe3_muãx
;

1195 
sqlôe3_vfs
 
	tsqlôe3_vfs
;

1196 (*
sqlôe3_sysˇŒ_±r
)();

1197 
	ssqlôe3_vfs
 {

1198 
iVîsi⁄
;

1199 
szOsFûe
;

1200 
mxP©h«me
;

1201 
sqlôe3_vfs
 *
pNext
;

1202 c⁄° *
zName
;

1203 *
pAµD©a
;

1204 (*
xO≥n
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
sqlôe3_fûe
*,

1205 
Êags
, *
pOutFœgs
);

1206 (*
xDñëe
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

1207 (*
xAc˚ss
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *
pResOut
);

1208 (*
xFuŒP©h«me
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
nOut
, *
zOut
);

1209 *(*
xDlO≥n
)(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

1210 (*
xDlEº‹
)(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

1211 (*(*
xDlSym
)(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

1212 (*
xDlClo£
)(
sqlôe3_vfs
*, *);

1213 (*
xR™dom√ss
)(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

1214 (*
xSÀï
)(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

1215 (*
xCuºítTime
)(
sqlôe3_vfs
*, *);

1216 (*
xGëLa°Eº‹
)(
sqlôe3_vfs
*, , *);

1221 (*
xCuºítTimeI¡64
)(
sqlôe3_vfs
*, 
sqlôe3_öt64
*);

1226 (*
xSëSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
sqlôe3_sysˇŒ_±r
);

1227 
sqlôe3_sysˇŒ_±r
 (*
xGëSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
);

1228 c⁄° *(*
xNextSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
);

1256 
	#SQLITE_ACCESS_EXISTS
 0

	)

1257 
	#SQLITE_ACCESS_READWRITE
 1

	)

1258 
	#SQLITE_ACCESS_READ
 2

	)

1282 
	#SQLITE_SHM_UNLOCK
 1

	)

1283 
	#SQLITE_SHM_LOCK
 2

	)

1284 
	#SQLITE_SHM_SHARED
 4

	)

1285 
	#SQLITE_SHM_EXCLUSIVE
 8

	)

1295 
	#SQLITE_SHM_NLOCK
 8

	)

1373 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_öôülize
();

1374 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_shutdown
();

1375 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_os_öô
();

1376 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_os_íd
();

1409 
SQLITE_API
 
SQLITE_CDECL
 
sqlôe3_c⁄fig
(, ...);

1428 
SQLITE_API
 
SQLITE_CDECL
 
sqlôe3_db_c⁄fig
(
sqlôe3
*, 
›
, ...);

1493 
sqlôe3_mem_mëhods
 
	tsqlôe3_mem_mëhods
;

1494 
	ssqlôe3_mem_mëhods
 {

1495 *(*
xMÆloc
)();

1496 (*
xFªe
)(*);

1497 *(*
xRóŒoc
)(*,);

1498 (*
xSize
)(*);

1499 (*
xRoundup
)();

1500 (*
xInô
)(*);

1501 (*
xShutdown
)(*);

1502 *
pAµD©a
;

1825 
	#SQLITE_CONFIG_SINGLETHREAD
 1

	)

1826 
	#SQLITE_CONFIG_MULTITHREAD
 2

	)

1827 
	#SQLITE_CONFIG_SERIALIZED
 3

	)

1828 
	#SQLITE_CONFIG_MALLOC
 4

	)

1829 
	#SQLITE_CONFIG_GETMALLOC
 5

	)

1830 
	#SQLITE_CONFIG_SCRATCH
 6

	)

1831 
	#SQLITE_CONFIG_PAGECACHE
 7

	)

1832 
	#SQLITE_CONFIG_HEAP
 8

	)

1833 
	#SQLITE_CONFIG_MEMSTATUS
 9

	)

1834 
	#SQLITE_CONFIG_MUTEX
 10

	)

1835 
	#SQLITE_CONFIG_GETMUTEX
 11

	)

1837 
	#SQLITE_CONFIG_LOOKASIDE
 13

	)

1838 
	#SQLITE_CONFIG_PCACHE
 14

	)

1839 
	#SQLITE_CONFIG_GETPCACHE
 15

	)

1840 
	#SQLITE_CONFIG_LOG
 16

	)

1841 
	#SQLITE_CONFIG_URI
 17

	)

1842 
	#SQLITE_CONFIG_PCACHE2
 18

	)

1843 
	#SQLITE_CONFIG_GETPCACHE2
 19

	)

1844 
	#SQLITE_CONFIG_COVERING_INDEX_SCAN
 20

	)

1845 
	#SQLITE_CONFIG_SQLLOG
 21

	)

1846 
	#SQLITE_CONFIG_MMAP_SIZE
 22

	)

1847 
	#SQLITE_CONFIG_WIN32_HEAPSIZE
 23

	)

1848 
	#SQLITE_CONFIG_PCACHE_HDRSZ
 24

	)

1849 
	#SQLITE_CONFIG_PMASZ
 25

	)

1909 
	#SQLITE_DBCONFIG_LOOKASIDE
 1001

	)

1910 
	#SQLITE_DBCONFIG_ENABLE_FKEY
 1002

	)

1911 
	#SQLITE_DBCONFIG_ENABLE_TRIGGER
 1003

	)

1922 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_exãnded_ªsu…_codes
(
sqlôe3
*, 
⁄off
);

1974 
SQLITE_API
 
sqlôe3_öt64
 
SQLITE_STDCALL
 
sqlôe3_œ°_ö£π_rowid
(
sqlôe3
*);

2027 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ch™ges
(
sqlôe3
*);

2051 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_tŸÆ_ch™ges
(
sqlôe3
*);

2091 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_öãºu±
(
sqlôe3
*);

2126 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_com∂ëe
(c⁄° *
sql
);

2127 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_com∂ëe16
(c⁄° *
sql
);

2188 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_busy_h™dÀr
(
sqlôe3
*, (*)(*,), *);

2211 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_busy_timeout
(
sqlôe3
*, 
ms
);

2286 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_gë_èbÀ
(

2287 
sqlôe3
 *
db
,

2288 c⁄° *
zSql
,

2289 ***
∑zResu…
,

2290 *
≤Row
,

2291 *
≤Cﬁumn
,

2292 **
pzEºmsg


2294 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_‰ì_èbÀ
(**
ªsu…
);

2400 
SQLITE_API
 *
SQLITE_CDECL
 
sqlôe3_m¥ötf
(const *,...);

2401 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_vm¥ötf
(c⁄° *, 
va_li°
);

2402 
SQLITE_API
 *
SQLITE_CDECL
 
sqlôe3_¢¥ötf
(,*,const *, ...);

2403 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_v¢¥ötf
(,*,c⁄° *, 
va_li°
);

2493 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_mÆloc
();

2494 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_mÆloc64
(
sqlôe3_uöt64
);

2495 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_ªÆloc
(*, );

2496 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_ªÆloc64
(*, 
sqlôe3_uöt64
);

2497 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_‰ì
(*);

2498 
SQLITE_API
 
sqlôe3_uöt64
 
SQLITE_STDCALL
 
sqlôe3_msize
(*);

2523 
SQLITE_API
 
sqlôe3_öt64
 
SQLITE_STDCALL
 
sqlôe3_mem‹y_u£d
();

2524 
SQLITE_API
 
sqlôe3_öt64
 
SQLITE_STDCALL
 
sqlôe3_mem‹y_highw©î
(
ª£tFœg
);

2547 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_øndom√ss
(
N
, *
P
);

2630 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_£t_auth‹izî
(

2631 
sqlôe3
*,

2632 (*
xAuth
)(*,,const *,const *,const *,const *),

2633 *
pU£rD©a


2648 
	#SQLITE_DENY
 1

	)

2649 
	#SQLITE_IGNORE
 2

	)

2671 
	#SQLITE_CREATE_INDEX
 1

	)

2672 
	#SQLITE_CREATE_TABLE
 2

	)

2673 
	#SQLITE_CREATE_TEMP_INDEX
 3

	)

2674 
	#SQLITE_CREATE_TEMP_TABLE
 4

	)

2675 
	#SQLITE_CREATE_TEMP_TRIGGER
 5

	)

2676 
	#SQLITE_CREATE_TEMP_VIEW
 6

	)

2677 
	#SQLITE_CREATE_TRIGGER
 7

	)

2678 
	#SQLITE_CREATE_VIEW
 8

	)

2679 
	#SQLITE_DELETE
 9

	)

2680 
	#SQLITE_DROP_INDEX
 10

	)

2681 
	#SQLITE_DROP_TABLE
 11

	)

2682 
	#SQLITE_DROP_TEMP_INDEX
 12

	)

2683 
	#SQLITE_DROP_TEMP_TABLE
 13

	)

2684 
	#SQLITE_DROP_TEMP_TRIGGER
 14

	)

2685 
	#SQLITE_DROP_TEMP_VIEW
 15

	)

2686 
	#SQLITE_DROP_TRIGGER
 16

	)

2687 
	#SQLITE_DROP_VIEW
 17

	)

2688 
	#SQLITE_INSERT
 18

	)

2689 
	#SQLITE_PRAGMA
 19

	)

2690 
	#SQLITE_READ
 20

	)

2691 
	#SQLITE_SELECT
 21

	)

2692 
	#SQLITE_TRANSACTION
 22

	)

2693 
	#SQLITE_UPDATE
 23

	)

2694 
	#SQLITE_ATTACH
 24

	)

2695 
	#SQLITE_DETACH
 25

	)

2696 
	#SQLITE_ALTER_TABLE
 26

	)

2697 
	#SQLITE_REINDEX
 27

	)

2698 
	#SQLITE_ANALYZE
 28

	)

2699 
	#SQLITE_CREATE_VTABLE
 29

	)

2700 
	#SQLITE_DROP_VTABLE
 30

	)

2701 
	#SQLITE_FUNCTION
 31

	)

2702 
	#SQLITE_SAVEPOINT
 32

	)

2703 
	#SQLITE_COPY
 0

	)

2704 
	#SQLITE_RECURSIVE
 33

	)

2735 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_åa˚
(
sqlôe3
*, (*
xTø˚
)(*,const *), *);

2736 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 *
SQLITE_STDCALL
 
sqlôe3_¥ofûe
(
sqlôe3
*,

2737 (*
xProfûe
)(*,c⁄° *,
sqlôe3_uöt64
), *);

2771 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¥ogªss_h™dÀr
(
sqlôe3
*, , (*)(*), *);

3000 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_›í
(

3001 c⁄° *
fûíame
,

3002 
sqlôe3
 **
µDb


3004 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_›í16
(

3005 c⁄° *
fûíame
,

3006 
sqlôe3
 **
µDb


3008 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_›í_v2
(

3009 c⁄° *
fûíame
,

3010 
sqlôe3
 **
µDb
,

3011 
Êags
,

3012 c⁄° *
zVfs


3054 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_uri_∑ømëî
(c⁄° *
zFûíame
, c⁄° *
zP¨am
);

3055 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_uri_boﬁón
(c⁄° *
zFûe
, c⁄° *
zP¨am
, 
bDeÁu…
);

3056 
SQLITE_API
 
sqlôe3_öt64
 
SQLITE_STDCALL
 
sqlôe3_uri_öt64
(const *, const *, sqlite3_int64);

3100 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_îrcode
(
sqlôe3
 *
db
);

3101 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_exãnded_îrcode
(
sqlôe3
 *
db
);

3102 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_îrmsg
(
sqlôe3
*);

3103 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_îrmsg16
(
sqlôe3
*);

3104 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_îr°r
();

3130 
sqlôe3_°mt
 
	tsqlôe3_°mt
;

3172 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_limô
(
sqlôe3
*, 
id
, 
√wVÆ
);

3230 
	#SQLITE_LIMIT_LENGTH
 0

	)

3231 
	#SQLITE_LIMIT_SQL_LENGTH
 1

	)

3232 
	#SQLITE_LIMIT_COLUMN
 2

	)

3233 
	#SQLITE_LIMIT_EXPR_DEPTH
 3

	)

3234 
	#SQLITE_LIMIT_COMPOUND_SELECT
 4

	)

3235 
	#SQLITE_LIMIT_VDBE_OP
 5

	)

3236 
	#SQLITE_LIMIT_FUNCTION_ARG
 6

	)

3237 
	#SQLITE_LIMIT_ATTACHED
 7

	)

3238 
	#SQLITE_LIMIT_LIKE_PATTERN_LENGTH
 8

	)

3239 
	#SQLITE_LIMIT_VARIABLE_NUMBER
 9

	)

3240 
	#SQLITE_LIMIT_TRIGGER_DEPTH
 10

	)

3241 
	#SQLITE_LIMIT_WORKER_THREADS
 11

	)

3324 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¥ï¨e
(

3325 
sqlôe3
 *
db
,

3326 c⁄° *
zSql
,

3327 
nByã
,

3328 
sqlôe3_°mt
 **
µStmt
,

3329 c⁄° **
pzTaû


3331 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¥ï¨e_v2
(

3332 
sqlôe3
 *
db
,

3333 c⁄° *
zSql
,

3334 
nByã
,

3335 
sqlôe3_°mt
 **
µStmt
,

3336 c⁄° **
pzTaû


3338 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¥ï¨e16
(

3339 
sqlôe3
 *
db
,

3340 c⁄° *
zSql
,

3341 
nByã
,

3342 
sqlôe3_°mt
 **
µStmt
,

3343 c⁄° **
pzTaû


3345 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¥ï¨e16_v2
(

3346 
sqlôe3
 *
db
,

3347 c⁄° *
zSql
,

3348 
nByã
,

3349 
sqlôe3_°mt
 **
µStmt
,

3350 c⁄° **
pzTaû


3361 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_sql
(
sqlôe3_°mt
 *
pStmt
);

3393 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°mt_ªad⁄ly
(
sqlôe3_°mt
 *
pStmt
);

3414 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°mt_busy
(
sqlôe3_°mt
*);

3455 
Mem
 
	tsqlôe3_vÆue
;

3469 
sqlôe3_c⁄ãxt
 
	tsqlôe3_c⁄ãxt
;

3578 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_blob
(
sqlôe3_°mt
*, , c⁄° *, 
n
, (*)(*));

3579 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_blob64
(
sqlôe3_°mt
*, , c⁄° *, 
sqlôe3_uöt64
,

3581 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_doubÀ
(
sqlôe3_°mt
*, , );

3582 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_öt
(
sqlôe3_°mt
*, , );

3583 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_öt64
(
sqlôe3_°mt
*, , 
sqlôe3_öt64
);

3584 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_nuŒ
(
sqlôe3_°mt
*, );

3585 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_ãxt
(
sqlôe3_°mt
*,,const *,,(*)(*));

3586 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_ãxt16
(
sqlôe3_°mt
*, , const *, , (*)(*));

3587 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_ãxt64
(
sqlôe3_°mt
*, , c⁄° *, 
sqlôe3_uöt64
,

3588 (*)(*), 
ícodög
);

3589 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_vÆue
(
sqlôe3_°mt
*, , c⁄° 
sqlôe3_vÆue
*);

3590 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_zîoblob
(
sqlôe3_°mt
*, , 
n
);

3591 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_zîoblob64
(
sqlôe3_°mt
*, , 
sqlôe3_uöt64
);

3612 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_∑ømëî_cou¡
(
sqlôe3_°mt
*);

3640 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_böd_∑ømëî_«me
(
sqlôe3_°mt
*, );

3657 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_∑ømëî_ödex
(
sqlôe3_°mt
*, c⁄° *
zName
);

3667 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_˛ór_bödögs
(
sqlôe3_°mt
*);

3679 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁumn_cou¡
(
sqlôe3_°mt
 *
pStmt
);

3708 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_«me
(
sqlôe3_°mt
*, 
N
);

3709 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_«me16
(
sqlôe3_°mt
*, 
N
);

3757 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_d©aba£_«me
(
sqlôe3_°mt
*,);

3758 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_d©aba£_«me16
(
sqlôe3_°mt
*,);

3759 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_èbÀ_«me
(
sqlôe3_°mt
*,);

3760 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_èbÀ_«me16
(
sqlôe3_°mt
*,);

3761 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_‹igö_«me
(
sqlôe3_°mt
*,);

3762 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_‹igö_«me16
(
sqlôe3_°mt
*,);

3794 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_de˛ty≥
(
sqlôe3_°mt
*,);

3795 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_de˛ty≥16
(
sqlôe3_°mt
*,);

3875 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°ï
(
sqlôe3_°mt
*);

3896 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_d©a_cou¡
(
sqlôe3_°mt
 *
pStmt
);

3919 
	#SQLITE_INTEGER
 1

	)

3920 
	#SQLITE_FLOAT
 2

	)

3921 
	#SQLITE_BLOB
 4

	)

3922 
	#SQLITE_NULL
 5

	)

3923 #ifde‡
SQLITE_TEXT


3924 #unde‡
SQLITE_TEXT


3926 
	#SQLITE_TEXT
 3

	)

3928 
	#SQLITE3_TEXT
 3

	)

4086 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_blob
(
sqlôe3_°mt
*, 
iCﬁ
);

4087 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁumn_byãs
(
sqlôe3_°mt
*, 
iCﬁ
);

4088 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁumn_byãs16
(
sqlôe3_°mt
*, 
iCﬁ
);

4089 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁumn_doubÀ
(
sqlôe3_°mt
*, 
iCﬁ
);

4090 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁumn_öt
(
sqlôe3_°mt
*, 
iCﬁ
);

4091 
SQLITE_API
 
sqlôe3_öt64
 
SQLITE_STDCALL
 
sqlôe3_cﬁumn_öt64
(
sqlôe3_°mt
*, 
iCﬁ
);

4092 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_ãxt
(
sqlôe3_°mt
*, 
iCﬁ
);

4093 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_ãxt16
(
sqlôe3_°mt
*, 
iCﬁ
);

4094 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁumn_ty≥
(
sqlôe3_°mt
*, 
iCﬁ
);

4095 
SQLITE_API
 
sqlôe3_vÆue
 *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_vÆue
(
sqlôe3_°mt
*, 
iCﬁ
);

4123 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_föÆize
(
sqlôe3_°mt
 *
pStmt
);

4150 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ª£t
(
sqlôe3_°mt
 *
pStmt
);

4250 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_fun˘i⁄
(

4251 
sqlôe3
 *
db
,

4252 c⁄° *
zFun˘i⁄Name
,

4253 
nArg
,

4254 
eTextRï
,

4255 *
pAµ
,

4256 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4257 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4258 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

4260 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_fun˘i⁄16
(

4261 
sqlôe3
 *
db
,

4262 c⁄° *
zFun˘i⁄Name
,

4263 
nArg
,

4264 
eTextRï
,

4265 *
pAµ
,

4266 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4267 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4268 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

4270 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_fun˘i⁄_v2
(

4271 
sqlôe3
 *
db
,

4272 c⁄° *
zFun˘i⁄Name
,

4273 
nArg
,

4274 
eTextRï
,

4275 *
pAµ
,

4276 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4277 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4278 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*),

4279 (*
xDe°roy
)(*)

4288 
	#SQLITE_UTF8
 1

	)

4289 
	#SQLITE_UTF16LE
 2

	)

4290 
	#SQLITE_UTF16BE
 3

	)

4291 
	#SQLITE_UTF16
 4

	)

4292 
	#SQLITE_ANY
 5

	)

4293 
	#SQLITE_UTF16_ALIGNED
 8

	)

4303 
	#SQLITE_DETERMINISTIC
 0x800

	)

4315 #i‚de‡
SQLITE_OMIT_DEPRECATED


4316 
SQLITE_API
 
SQLITE_DEPRECATED
 
SQLITE_STDCALL
 
sqlôe3_aggªg©e_cou¡
(
sqlôe3_c⁄ãxt
*);

4317 
SQLITE_API
 
SQLITE_DEPRECATED
 
SQLITE_STDCALL
 
sqlôe3_expúed
(
sqlôe3_°mt
*);

4318 
SQLITE_API
 
SQLITE_DEPRECATED
 
SQLITE_STDCALL
 
sqlôe3_å™s„r_bödögs
(
sqlôe3_°mt
*, sqlite3_stmt*);

4319 
SQLITE_API
 
SQLITE_DEPRECATED
 
SQLITE_STDCALL
 
sqlôe3_globÆ_ªcovî
();

4320 
SQLITE_API
 
SQLITE_DEPRECATED
 
SQLITE_STDCALL
 
sqlôe3_thªad_˛ónup
();

4321 
SQLITE_API
 
SQLITE_DEPRECATED
 
SQLITE_STDCALL
 
sqlôe3_mem‹y_Æ¨m
((*)(*,
sqlôe3_öt64
,),

4322 *,
sqlôe3_öt64
);

4371 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_vÆue_blob
(
sqlôe3_vÆue
*);

4372 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_byãs
(
sqlôe3_vÆue
*);

4373 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_byãs16
(
sqlôe3_vÆue
*);

4374 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_doubÀ
(
sqlôe3_vÆue
*);

4375 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_öt
(
sqlôe3_vÆue
*);

4376 
SQLITE_API
 
sqlôe3_öt64
 
SQLITE_STDCALL
 
sqlôe3_vÆue_öt64
(
sqlôe3_vÆue
*);

4377 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_vÆue_ãxt
(
sqlôe3_vÆue
*);

4378 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_vÆue_ãxt16
(
sqlôe3_vÆue
*);

4379 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_vÆue_ãxt16À
(
sqlôe3_vÆue
*);

4380 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_vÆue_ãxt16be
(
sqlôe3_vÆue
*);

4381 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_ty≥
(
sqlôe3_vÆue
*);

4382 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_numîic_ty≥
(
sqlôe3_vÆue
*);

4398 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_subty≥
(
sqlôe3_vÆue
*);

4414 
SQLITE_API
 
sqlôe3_vÆue
 *
SQLITE_STDCALL
 
sqlôe3_vÆue_dup
(const sqlite3_value*);

4415 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_‰ì
(
sqlôe3_vÆue
*);

4460 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_aggªg©e_c⁄ãxt
(
sqlôe3_c⁄ãxt
*, 
nByãs
);

4475 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_u£r_d©a
(
sqlôe3_c⁄ãxt
*);

4487 
SQLITE_API
 
sqlôe3
 *
SQLITE_STDCALL
 
sqlôe3_c⁄ãxt_db_h™dÀ
(
sqlôe3_c⁄ãxt
*);

4540 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_gë_auxd©a
(
sqlôe3_c⁄ãxt
*, 
N
);

4541 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_£t_auxd©a
(
sqlôe3_c⁄ãxt
*, 
N
, *, (*)(*));

4558 (*
sqlôe3_de°ru˘‹_ty≥
)(*);

4559 
	#SQLITE_STATIC
 ((
sqlôe3_de°ru˘‹_ty≥
)0)

	)

4560 
	#SQLITE_TRANSIENT
 ((
sqlôe3_de°ru˘‹_ty≥
)-1)

	)

4677 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_blob
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4678 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_blob64
(
sqlôe3_c⁄ãxt
*,const *,

4679 
sqlôe3_uöt64
,(*)(*));

4680 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_doubÀ
(
sqlôe3_c⁄ãxt
*, );

4681 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_îr‹
(
sqlôe3_c⁄ãxt
*, const *, );

4682 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_îr‹16
(
sqlôe3_c⁄ãxt
*, const *, );

4683 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_îr‹_toobig
(
sqlôe3_c⁄ãxt
*);

4684 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_îr‹_nomem
(
sqlôe3_c⁄ãxt
*);

4685 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_îr‹_code
(
sqlôe3_c⁄ãxt
*, );

4686 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_öt
(
sqlôe3_c⁄ãxt
*, );

4687 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_öt64
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_öt64
);

4688 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_nuŒ
(
sqlôe3_c⁄ãxt
*);

4689 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_ãxt
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4690 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_ãxt64
(
sqlôe3_c⁄ãxt
*, c⁄° *,
sqlôe3_uöt64
,

4691 (*)(*), 
ícodög
);

4692 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_ãxt16
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4693 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_ãxt16À
(
sqlôe3_c⁄ãxt
*, const *, ,(*)(*));

4694 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_ãxt16be
(
sqlôe3_c⁄ãxt
*, const *, ,(*)(*));

4695 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_vÆue
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_vÆue
*);

4696 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_zîoblob
(
sqlôe3_c⁄ãxt
*, 
n
);

4697 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_zîoblob64
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_uöt64
 
n
);

4712 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_subty≥
(
sqlôe3_c⁄ãxt
*,);

4794 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_cﬁœti⁄
(

4795 
sqlôe3
*,

4796 c⁄° *
zName
,

4797 
eTextRï
,

4798 *
pArg
,

4799 (*
xCom∑ª
)(*,,const *,,const *)

4801 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_cﬁœti⁄_v2
(

4802 
sqlôe3
*,

4803 c⁄° *
zName
,

4804 
eTextRï
,

4805 *
pArg
,

4806 (*
xCom∑ª
)(*,,const *,,const *),

4807 (*
xDe°roy
)(*)

4809 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_cﬁœti⁄16
(

4810 
sqlôe3
*,

4811 c⁄° *
zName
,

4812 
eTextRï
,

4813 *
pArg
,

4814 (*
xCom∑ª
)(*,,const *,,const *)

4844 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁœti⁄_√eded
(

4845 
sqlôe3
*,

4847 (*)(*,
sqlôe3
*,
eTextRï
,const *)

4849 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁœti⁄_√eded16
(

4850 
sqlôe3
*,

4852 (*)(*,
sqlôe3
*,
eTextRï
,const *)

4855 #ifde‡
SQLITE_HAS_CODEC


4863 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_key
(

4864 
sqlôe3
 *
db
,

4865 c⁄° *
pKey
, 
nKey


4867 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_key_v2
(

4868 
sqlôe3
 *
db
,

4869 c⁄° *
zDbName
,

4870 c⁄° *
pKey
, 
nKey


4881 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªkey
(

4882 
sqlôe3
 *
db
,

4883 c⁄° *
pKey
, 
nKey


4885 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªkey_v2
(

4886 
sqlôe3
 *
db
,

4887 c⁄° *
zDbName
,

4888 c⁄° *
pKey
, 
nKey


4895 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_a˘iv©e_£e
(

4896 c⁄° *
zPassPhø£


4900 #ifde‡
SQLITE_ENABLE_CEROD


4905 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_a˘iv©e_˚rod
(

4906 c⁄° *
zPassPhø£


4927 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¶ìp
();

4985 
SQLITE_API
 
SQLITE_EXTERN
 *
sqlôe3_ãmp_dúe˘‹y
;

5022 
SQLITE_API
 
SQLITE_EXTERN
 *
sqlôe3_d©a_dúe˘‹y
;

5046 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_gë_autocommô
(
sqlôe3
*);

5059 
SQLITE_API
 
sqlôe3
 *
SQLITE_STDCALL
 
sqlôe3_db_h™dÀ
(
sqlôe3_°mt
*);

5076 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_db_fûíame
(
sqlôe3
 *
db
, c⁄° *
zDbName
);

5086 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_db_ªad⁄ly
(
sqlôe3
 *
db
, c⁄° *
zDbName
);

5102 
SQLITE_API
 
sqlôe3_°mt
 *
SQLITE_STDCALL
 
sqlôe3_√xt_°mt
(
sqlôe3
 *
pDb
, sqlôe3_°mà*
pStmt
);

5151 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_commô_hook
(
sqlôe3
*, (*)(*), *);

5152 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_rﬁlback_hook
(
sqlôe3
*, (*)(*), *);

5203 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_upd©e_hook
(

5204 
sqlôe3
*,

5205 (*)(*,,c⁄° *,c⁄° *,
sqlôe3_öt64
),

5243 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_íabÀ_sh¨ed_ˇche
();

5259 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªÀa£_mem‹y
();

5273 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_db_ªÀa£_mem‹y
(
sqlôe3
*);

5325 
SQLITE_API
 
sqlôe3_öt64
 
SQLITE_STDCALL
 
sqlôe3_so·_hóp_limô64
(sqlôe3_öt64 
N
);

5336 
SQLITE_API
 
SQLITE_DEPRECATED
 
SQLITE_STDCALL
 
sqlôe3_so·_hóp_limô
(
N
);

5406 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_èbÀ_cﬁumn_mëad©a
(

5407 
sqlôe3
 *
db
,

5408 c⁄° *
zDbName
,

5409 c⁄° *
zTabÀName
,

5410 c⁄° *
zCﬁumnName
,

5411 c⁄° **
pzD©aTy≥
,

5412 c⁄° **
pzCﬁlSeq
,

5413 *
pNŸNuŒ
,

5414 *
pPrim¨yKey
,

5415 *
pAutoöc


5453 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_lﬂd_exãnsi⁄
(

5454 
sqlôe3
 *
db
,

5455 c⁄° *
zFûe
,

5456 c⁄° *
zProc
,

5457 **
pzEºMsg


5474 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_íabÀ_lﬂd_exãnsi⁄
(
sqlôe3
 *
db
, 
⁄off
);

5512 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_auto_exãnsi⁄
((*
xE¡ryPoöt
)());

5524 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ˇn˚l_auto_exãnsi⁄
((*
xE¡ryPoöt
)());

5532 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ª£t_auto_exãnsi⁄
();

5546 
sqlôe3_vèb
 
	tsqlôe3_vèb
;

5547 
sqlôe3_ödex_öfo
 
	tsqlôe3_ödex_öfo
;

5548 
sqlôe3_vèb_curs‹
 
	tsqlôe3_vèb_curs‹
;

5549 
sqlôe3_moduÀ
 
	tsqlôe3_moduÀ
;

5567 
	ssqlôe3_moduÀ
 {

5568 
iVîsi⁄
;

5569 (*
xCª©e
)(
sqlôe3
*, *
pAux
,

5570 
¨gc
, c⁄° *c⁄°*
¨gv
,

5571 
sqlôe3_vèb
 **
µVTab
, **);

5572 (*
xC⁄√˘
)(
sqlôe3
*, *
pAux
,

5573 
¨gc
, c⁄° *c⁄°*
¨gv
,

5574 
sqlôe3_vèb
 **
µVTab
, **);

5575 (*
xBe°Index
)(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_ödex_öfo
*);

5576 (*
xDisc⁄√˘
)(
sqlôe3_vèb
 *
pVTab
);

5577 (*
xDe°roy
)(
sqlôe3_vèb
 *
pVTab
);

5578 (*
xO≥n
)(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
);

5579 (*
xClo£
)(
sqlôe3_vèb_curs‹
*);

5580 (*
xFûãr
)(
sqlôe3_vèb_curs‹
*, 
idxNum
, c⁄° *
idxSå
,

5581 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
);

5582 (*
xNext
)(
sqlôe3_vèb_curs‹
*);

5583 (*
xEof
)(
sqlôe3_vèb_curs‹
*);

5584 (*
xCﬁumn
)(
sqlôe3_vèb_curs‹
*, 
sqlôe3_c⁄ãxt
*, );

5585 (*
xRowid
)(
sqlôe3_vèb_curs‹
*, 
sqlôe3_öt64
 *
pRowid
);

5586 (*
xUpd©e
)(
sqlôe3_vèb
 *, , 
sqlôe3_vÆue
 **, 
sqlôe3_öt64
 *);

5587 (*
xBegö
)(
sqlôe3_vèb
 *
pVTab
);

5588 (*
xSync
)(
sqlôe3_vèb
 *
pVTab
);

5589 (*
xCommô
)(
sqlôe3_vèb
 *
pVTab
);

5590 (*
xRﬁlback
)(
sqlôe3_vèb
 *
pVTab
);

5591 (*
xFödFun˘i⁄
)(
sqlôe3_vèb
 *
pVèb
, 
nArg
, c⁄° *
zName
,

5592 (**
pxFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

5593 **
µArg
);

5594 (*
xRíame
)(
sqlôe3_vèb
 *
pVèb
, c⁄° *
zNew
);

5597 (*
xSavïoöt
)(
sqlôe3_vèb
 *
pVTab
, );

5598 (*
xRñó£
)(
sqlôe3_vèb
 *
pVTab
, );

5599 (*
xRﬁlbackTo
)(
sqlôe3_vèb
 *
pVTab
, );

5696 
	ssqlôe3_ödex_öfo
 {

5698 
nC⁄°øöt
;

5699 
	ssqlôe3_ödex_c⁄°øöt
 {

5700 
iCﬁumn
;

5701 
›
;

5702 
ußbÀ
;

5703 
iTîmOff£t
;

5704 } *
aC⁄°øöt
;

5705 
nOrdîBy
;

5706 
	ssqlôe3_ödex_‹dîby
 {

5707 
iCﬁumn
;

5708 
desc
;

5709 } *
aOrdîBy
;

5711 
	ssqlôe3_ödex_c⁄°øöt_ußge
 {

5712 
¨gvIndex
;

5713 
omô
;

5714 } *
aC⁄°øötUßge
;

5715 
idxNum
;

5716 *
idxSå
;

5717 
√edToFªeIdxSå
;

5718 
‹dîByC⁄sumed
;

5719 
e°im©edCo°
;

5721 
sqlôe3_öt64
 
e°im©edRows
;

5723 
idxFœgs
;

5725 
sqlôe3_uöt64
 
cﬁU£d
;

5731 
	#SQLITE_INDEX_SCAN_UNIQUE
 1

	)

5741 
	#SQLITE_INDEX_CONSTRAINT_EQ
 2

	)

5742 
	#SQLITE_INDEX_CONSTRAINT_GT
 4

	)

5743 
	#SQLITE_INDEX_CONSTRAINT_LE
 8

	)

5744 
	#SQLITE_INDEX_CONSTRAINT_LT
 16

	)

5745 
	#SQLITE_INDEX_CONSTRAINT_GE
 32

	)

5746 
	#SQLITE_INDEX_CONSTRAINT_MATCH
 64

	)

5747 
	#SQLITE_INDEX_CONSTRAINT_LIKE
 65

	)

5748 
	#SQLITE_INDEX_CONSTRAINT_GLOB
 66

	)

5749 
	#SQLITE_INDEX_CONSTRAINT_REGEXP
 67

	)

5777 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_moduÀ
(

5778 
sqlôe3
 *
db
,

5779 c⁄° *
zName
,

5780 c⁄° 
sqlôe3_moduÀ
 *
p
,

5781 *
pClõ¡D©a


5783 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_moduÀ_v2
(

5784 
sqlôe3
 *
db
,

5785 c⁄° *
zName
,

5786 c⁄° 
sqlôe3_moduÀ
 *
p
,

5787 *
pClõ¡D©a
,

5788 (*
xDe°roy
)(*)

5809 
	ssqlôe3_vèb
 {

5810 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

5811 
nRef
;

5812 *
zEºMsg
;

5833 
	ssqlôe3_vèb_curs‹
 {

5834 
sqlôe3_vèb
 *
pVèb
;

5846 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_de˛¨e_vèb
(
sqlôe3
*, c⁄° *
zSQL
);

5865 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ovîlﬂd_fun˘i⁄
(
sqlôe3
*, c⁄° *
zFuncName
, 
nArg
);

5889 
sqlôe3_blob
 
	tsqlôe3_blob
;

5964 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_blob_›í
(

5965 
sqlôe3
*,

5966 c⁄° *
zDb
,

5967 c⁄° *
zTabÀ
,

5968 c⁄° *
zCﬁumn
,

5969 
sqlôe3_öt64
 
iRow
,

5970 
Êags
,

5971 
sqlôe3_blob
 **
µBlob


5997 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_blob_ª›í
(
sqlôe3_blob
 *, 
sqlôe3_öt64
);

6020 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_blob_˛o£
(
sqlôe3_blob
 *);

6036 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_blob_byãs
(
sqlôe3_blob
 *);

6065 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_blob_ªad
(
sqlôe3_blob
 *, *
Z
, 
N
, 
iOff£t
);

6107 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_blob_wrôe
(
sqlôe3_blob
 *, c⁄° *
z
, 
n
, 
iOff£t
);

6138 
SQLITE_API
 
sqlôe3_vfs
 *
SQLITE_STDCALL
 
sqlôe3_vfs_föd
(c⁄° *
zVfsName
);

6139 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vfs_ªgi°î
(
sqlôe3_vfs
*, 
makeDÊt
);

6140 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vfs_uƒegi°î
(
sqlôe3_vfs
*);

6256 
SQLITE_API
 
sqlôe3_muãx
 *
SQLITE_STDCALL
 
sqlôe3_muãx_Æloc
();

6257 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_muãx_‰ì
(
sqlôe3_muãx
*);

6258 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_muãx_íãr
(
sqlôe3_muãx
*);

6259 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_muãx_åy
(
sqlôe3_muãx
*);

6260 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_muãx_Àave
(
sqlôe3_muãx
*);

6327 
sqlôe3_muãx_mëhods
 
	tsqlôe3_muãx_mëhods
;

6328 
	ssqlôe3_muãx_mëhods
 {

6329 (*
xMuãxInô
)();

6330 (*
xMuãxEnd
)();

6331 
sqlôe3_muãx
 *(*
xMuãxAŒoc
)();

6332 (*
xMuãxFªe
)(
sqlôe3_muãx
 *);

6333 (*
xMuãxE¡î
)(
sqlôe3_muãx
 *);

6334 (*
xMuãxTry
)(
sqlôe3_muãx
 *);

6335 (*
xMuãxLóve
)(
sqlôe3_muãx
 *);

6336 (*
xMuãxHñd
)(
sqlôe3_muãx
 *);

6337 (*
xMuãxNŸhñd
)(
sqlôe3_muãx
 *);

6369 #i‚de‡
NDEBUG


6370 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_muãx_hñd
(
sqlôe3_muãx
*);

6371 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_muãx_nŸhñd
(
sqlôe3_muãx
*);

6384 
	#SQLITE_MUTEX_FAST
 0

	)

6385 
	#SQLITE_MUTEX_RECURSIVE
 1

	)

6386 
	#SQLITE_MUTEX_STATIC_MASTER
 2

	)

6387 
	#SQLITE_MUTEX_STATIC_MEM
 3

	)

6388 
	#SQLITE_MUTEX_STATIC_MEM2
 4

	)

6389 
	#SQLITE_MUTEX_STATIC_OPEN
 4

	)

6390 
	#SQLITE_MUTEX_STATIC_PRNG
 5

	)

6391 
	#SQLITE_MUTEX_STATIC_LRU
 6

	)

6392 
	#SQLITE_MUTEX_STATIC_LRU2
 7

	)

6393 
	#SQLITE_MUTEX_STATIC_PMEM
 7

	)

6394 
	#SQLITE_MUTEX_STATIC_APP1
 8

	)

6395 
	#SQLITE_MUTEX_STATIC_APP2
 9

	)

6396 
	#SQLITE_MUTEX_STATIC_APP3
 10

	)

6397 
	#SQLITE_MUTEX_STATIC_VFS1
 11

	)

6398 
	#SQLITE_MUTEX_STATIC_VFS2
 12

	)

6399 
	#SQLITE_MUTEX_STATIC_VFS3
 13

	)

6411 
SQLITE_API
 
sqlôe3_muãx
 *
SQLITE_STDCALL
 
sqlôe3_db_muãx
(
sqlôe3
*);

6446 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_fûe_c⁄åﬁ
(
sqlôe3
*, c⁄° *
zDbName
, 
›
, *);

6465 
SQLITE_API
 
SQLITE_CDECL
 
sqlôe3_ã°_c⁄åﬁ
(
›
, ...);

6478 
	#SQLITE_TESTCTRL_FIRST
 5

	)

6479 
	#SQLITE_TESTCTRL_PRNG_SAVE
 5

	)

6480 
	#SQLITE_TESTCTRL_PRNG_RESTORE
 6

	)

6481 
	#SQLITE_TESTCTRL_PRNG_RESET
 7

	)

6482 
	#SQLITE_TESTCTRL_BITVEC_TEST
 8

	)

6483 
	#SQLITE_TESTCTRL_FAULT_INSTALL
 9

	)

6484 
	#SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
 10

	)

6485 
	#SQLITE_TESTCTRL_PENDING_BYTE
 11

	)

6486 
	#SQLITE_TESTCTRL_ASSERT
 12

	)

6487 
	#SQLITE_TESTCTRL_ALWAYS
 13

	)

6488 
	#SQLITE_TESTCTRL_RESERVE
 14

	)

6489 
	#SQLITE_TESTCTRL_OPTIMIZATIONS
 15

	)

6490 
	#SQLITE_TESTCTRL_ISKEYWORD
 16

	)

6491 
	#SQLITE_TESTCTRL_SCRATCHMALLOC
 17

	)

6492 
	#SQLITE_TESTCTRL_LOCALTIME_FAULT
 18

	)

6493 
	#SQLITE_TESTCTRL_EXPLAIN_STMT
 19

	)

6494 
	#SQLITE_TESTCTRL_NEVER_CORRUPT
 20

	)

6495 
	#SQLITE_TESTCTRL_VDBE_COVERAGE
 21

	)

6496 
	#SQLITE_TESTCTRL_BYTEORDER
 22

	)

6497 
	#SQLITE_TESTCTRL_ISINIT
 23

	)

6498 
	#SQLITE_TESTCTRL_SORTER_MMAP
 24

	)

6499 
	#SQLITE_TESTCTRL_IMPOSTER
 25

	)

6500 
	#SQLITE_TESTCTRL_LAST
 25

	)

6528 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°©us
(
›
, *
pCuºít
, *
pHighw©î
, 
ª£tFœg
);

6529 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°©us64
(

6530 
›
,

6531 
sqlôe3_öt64
 *
pCuºít
,

6532 
sqlôe3_öt64
 *
pHighw©î
,

6533 
ª£tFœg


6620 
	#SQLITE_STATUS_MEMORY_USED
 0

	)

6621 
	#SQLITE_STATUS_PAGECACHE_USED
 1

	)

6622 
	#SQLITE_STATUS_PAGECACHE_OVERFLOW
 2

	)

6623 
	#SQLITE_STATUS_SCRATCH_USED
 3

	)

6624 
	#SQLITE_STATUS_SCRATCH_OVERFLOW
 4

	)

6625 
	#SQLITE_STATUS_MALLOC_SIZE
 5

	)

6626 
	#SQLITE_STATUS_PARSER_STACK
 6

	)

6627 
	#SQLITE_STATUS_PAGECACHE_SIZE
 7

	)

6628 
	#SQLITE_STATUS_SCRATCH_SIZE
 8

	)

6629 
	#SQLITE_STATUS_MALLOC_COUNT
 9

	)

6654 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_db_°©us
(
sqlôe3
*, 
›
, *
pCur
, *
pHiwå
, 
ª£tFlg
);

6746 
	#SQLITE_DBSTATUS_LOOKASIDE_USED
 0

	)

6747 
	#SQLITE_DBSTATUS_CACHE_USED
 1

	)

6748 
	#SQLITE_DBSTATUS_SCHEMA_USED
 2

	)

6749 
	#SQLITE_DBSTATUS_STMT_USED
 3

	)

6750 
	#SQLITE_DBSTATUS_LOOKASIDE_HIT
 4

	)

6751 
	#SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE
 5

	)

6752 
	#SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL
 6

	)

6753 
	#SQLITE_DBSTATUS_CACHE_HIT
 7

	)

6754 
	#SQLITE_DBSTATUS_CACHE_MISS
 8

	)

6755 
	#SQLITE_DBSTATUS_CACHE_WRITE
 9

	)

6756 
	#SQLITE_DBSTATUS_DEFERRED_FKS
 10

	)

6757 
	#SQLITE_DBSTATUS_MAX
 10

	)

6784 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°mt_°©us
(
sqlôe3_°mt
*, 
›
,
ª£tFlg
);

6823 
	#SQLITE_STMTSTATUS_FULLSCAN_STEP
 1

	)

6824 
	#SQLITE_STMTSTATUS_SORT
 2

	)

6825 
	#SQLITE_STMTSTATUS_AUTOINDEX
 3

	)

6826 
	#SQLITE_STMTSTATUS_VM_STEP
 4

	)

6839 
sqlôe3_pˇche
 
	tsqlôe3_pˇche
;

6851 
sqlôe3_pˇche_∑ge
 
	tsqlôe3_pˇche_∑ge
;

6852 
	ssqlôe3_pˇche_∑ge
 {

6853 *
pBuf
;

6854 *
pExåa
;

7016 
sqlôe3_pˇche_mëhods2
 
	tsqlôe3_pˇche_mëhods2
;

7017 
	ssqlôe3_pˇche_mëhods2
 {

7018 
iVîsi⁄
;

7019 *
pArg
;

7020 (*
xInô
)(*);

7021 (*
xShutdown
)(*);

7022 
sqlôe3_pˇche
 *(*
xCª©e
)(
szPage
, 
szExåa
, 
bPurgóbÀ
);

7023 (*
xCachesize
)(
sqlôe3_pˇche
*, 
nCachesize
);

7024 (*
xPagecou¡
)(
sqlôe3_pˇche
*);

7025 
sqlôe3_pˇche_∑ge
 *(*
xFëch
)(
sqlôe3_pˇche
*, 
key
, 
¸óãFœg
);

7026 (*
xU≈ö
)(
sqlôe3_pˇche
*, 
sqlôe3_pˇche_∑ge
*, 
disˇrd
);

7027 (*
xRekey
)(
sqlôe3_pˇche
*, 
sqlôe3_pˇche_∑ge
*,

7028 
ﬁdKey
, 
√wKey
);

7029 (*
xTrunˇã
)(
sqlôe3_pˇche
*, 
iLimô
);

7030 (*
xDe°roy
)(
sqlôe3_pˇche
*);

7031 (*
xShrök
)(
sqlôe3_pˇche
*);

7039 
sqlôe3_pˇche_mëhods
 
	tsqlôe3_pˇche_mëhods
;

7040 
	ssqlôe3_pˇche_mëhods
 {

7041 *
pArg
;

7042 (*
xInô
)(*);

7043 (*
xShutdown
)(*);

7044 
sqlôe3_pˇche
 *(*
xCª©e
)(
szPage
, 
bPurgóbÀ
);

7045 (*
xCachesize
)(
sqlôe3_pˇche
*, 
nCachesize
);

7046 (*
xPagecou¡
)(
sqlôe3_pˇche
*);

7047 *(*
xFëch
)(
sqlôe3_pˇche
*, 
key
, 
¸óãFœg
);

7048 (*
xU≈ö
)(
sqlôe3_pˇche
*, *, 
disˇrd
);

7049 (*
xRekey
)(
sqlôe3_pˇche
*, *, 
ﬁdKey
, 
√wKey
);

7050 (*
xTrunˇã
)(
sqlôe3_pˇche
*, 
iLimô
);

7051 (*
xDe°roy
)(
sqlôe3_pˇche
*);

7065 
sqlôe3_backup
 
	tsqlôe3_backup
;

7253 
SQLITE_API
 
sqlôe3_backup
 *
SQLITE_STDCALL
 
sqlôe3_backup_öô
(

7254 
sqlôe3
 *
pDe°
,

7255 c⁄° *
zDe°Name
,

7256 
sqlôe3
 *
pSour˚
,

7257 c⁄° *
zSour˚Name


7259 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_backup_°ï
(
sqlôe3_backup
 *
p
, 
nPage
);

7260 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_backup_föish
(
sqlôe3_backup
 *
p
);

7261 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_backup_ªmaöög
(
sqlôe3_backup
 *
p
);

7262 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_backup_∑gecou¡
(
sqlôe3_backup
 *
p
);

7379 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_u∆ock_nŸify
(

7380 
sqlôe3
 *
pBlocked
,

7381 (*
xNŸify
)(**
≠Arg
, 
nArg
),

7382 *
pNŸifyArg


7394 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°ricmp
(const *, const *);

7395 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°∫icmp
(const *, const *, );

7412 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°rglob
(c⁄° *
zGlob
, c⁄° *
zSå
);

7435 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°æike
(c⁄° *
zGlob
, c⁄° *
zSå
, 
cEsc
);

7458 
SQLITE_API
 
SQLITE_CDECL
 
sqlôe3_log
(
iEºCode
, c⁄° *
zF‹m©
, ...);

7494 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_wÆ_hook
(

7495 
sqlôe3
*,

7496 (*)(*,
sqlôe3
*,const *,),

7529 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_wÆ_autocheckpoöt
(
sqlôe3
 *
db
, 
N
);

7551 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_wÆ_checkpoöt
(
sqlôe3
 *
db
, c⁄° *
zDb
);

7645 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_wÆ_checkpoöt_v2
(

7646 
sqlôe3
 *
db
,

7647 c⁄° *
zDb
,

7648 
eMode
,

7649 *
≤Log
,

7650 *
≤Ck±


7662 
	#SQLITE_CHECKPOINT_PASSIVE
 0

	)

7663 
	#SQLITE_CHECKPOINT_FULL
 1

	)

7664 
	#SQLITE_CHECKPOINT_RESTART
 2

	)

7665 
	#SQLITE_CHECKPOINT_TRUNCATE
 3

	)

7681 
SQLITE_API
 
SQLITE_CDECL
 
sqlôe3_vèb_c⁄fig
(
sqlôe3
*, 
›
, ...);

7722 
	#SQLITE_VTAB_CONSTRAINT_SUPPORT
 1

	)

7734 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vèb_⁄_c⁄Êi˘
(
sqlôe3
 *);

7748 
	#SQLITE_ROLLBACK
 1

	)

7750 
	#SQLITE_FAIL
 3

	)

7752 
	#SQLITE_REPLACE
 5

	)

7801 
	#SQLITE_SCANSTAT_NLOOP
 0

	)

7802 
	#SQLITE_SCANSTAT_NVISIT
 1

	)

7803 
	#SQLITE_SCANSTAT_EST
 2

	)

7804 
	#SQLITE_SCANSTAT_NAME
 3

	)

7805 
	#SQLITE_SCANSTAT_EXPLAIN
 4

	)

7806 
	#SQLITE_SCANSTAT_SELECTID
 5

	)

7839 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°mt_sˇn°©us
(

7840 
sqlôe3_°mt
 *
pStmt
,

7841 
idx
,

7842 
iSˇnSètusOp
,

7843 *
pOut


7855 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°mt_sˇn°©us_ª£t
(
sqlôe3_°mt
*);

7887 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_db_ˇcheÊush
(
sqlôe3
*);

7915 
sqlôe3_¢≠shŸ
 
	tsqlôe3_¢≠shŸ
;

7937 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 
SQLITE_STDCALL
 
sqlôe3_¢≠shŸ_gë
(

7938 
sqlôe3
 *
db
,

7939 c⁄° *
zSchema
,

7940 
sqlôe3_¢≠shŸ
 **
µS«pshŸ


7962 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 
SQLITE_STDCALL
 
sqlôe3_¢≠shŸ_›í
(

7963 
sqlôe3
 *
db
,

7964 c⁄° *
zSchema
,

7965 
sqlôe3_¢≠shŸ
 *
pS«pshŸ


7979 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 
SQLITE_STDCALL
 
sqlôe3_¢≠shŸ_‰ì
(
sqlôe3_¢≠shŸ
*);

7985 #ifde‡
SQLITE_OMIT_FLOATING_POINT


7989 #ifde‡
__˝lu•lus


8007 #i‚de‡
_SQLITE3RTREE_H_


8008 
	#_SQLITE3RTREE_H_


	)

8011 #ifde‡
__˝lu•lus


8015 
sqlôe3_πªe_geomëry
 
	tsqlôe3_πªe_geomëry
;

8016 
sqlôe3_πªe_quîy_öfo
 
	tsqlôe3_πªe_quîy_öfo
;

8021 #ifde‡
SQLITE_RTREE_INT_ONLY


8022 
sqlôe3_öt64
 
	tsqlôe3_πªe_dbl
;

8024 
	tsqlôe3_πªe_dbl
;

8033 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_πªe_geomëry_ˇŒback
(

8034 
sqlôe3
 *
db
,

8035 c⁄° *
zGeom
,

8036 (*
xGeom
)(
sqlôe3_πªe_geomëry
*, , 
sqlôe3_πªe_dbl
*,*),

8037 *
pC⁄ãxt


8045 
	ssqlôe3_πªe_geomëry
 {

8046 *
pC⁄ãxt
;

8047 
nP¨am
;

8048 
sqlôe3_πªe_dbl
 *
aP¨am
;

8049 *
pU£r
;

8050 (*
xDñU£r
)(*);

8059 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_πªe_quîy_ˇŒback
(

8060 
sqlôe3
 *
db
,

8061 c⁄° *
zQuîyFunc
,

8062 (*
xQuîyFunc
)(
sqlôe3_πªe_quîy_öfo
*),

8063 *
pC⁄ãxt
,

8064 (*
xDe°ru˘‹
)(*)

8077 
	ssqlôe3_πªe_quîy_öfo
 {

8078 *
pC⁄ãxt
;

8079 
nP¨am
;

8080 
sqlôe3_πªe_dbl
 *
aP¨am
;

8081 *
pU£r
;

8082 (*
xDñU£r
)(*);

8083 
sqlôe3_πªe_dbl
 *
aCo‹d
;

8084 *
™Queue
;

8085 
nCo‹d
;

8086 
iLevñ
;

8087 
mxLevñ
;

8088 
sqlôe3_öt64
 
iRowid
;

8089 
sqlôe3_πªe_dbl
 
rP¨ítSc‹e
;

8090 
eP¨ítWôhö
;

8091 
eWôhö
;

8092 
sqlôe3_πªe_dbl
 
rSc‹e
;

8094 
sqlôe3_vÆue
 **
≠SqlP¨am
;

8100 
	#NOT_WITHIN
 0

	)

8101 
	#PARTLY_WITHIN
 1

	)

8102 
	#FULLY_WITHIN
 2

	)

8105 #ifde‡
__˝lu•lus


8131 #i‚de‡
_FTS5_H


8132 
	#_FTS5_H


	)

8135 #ifde‡
__˝lu•lus


8146 
Fts5Exãnsi⁄Api
 
	tFts5Exãnsi⁄Api
;

8147 
Fts5C⁄ãxt
 
	tFts5C⁄ãxt
;

8148 
Fts5Phø£Iãr
 
	tFts5Phø£Iãr
;

8150 (*
·s5_exãnsi⁄_fun˘i⁄
)(

8151 c⁄° 
	tFts5Exãnsi⁄Api
 *
	tpApi
,

8152 
	tFts5C⁄ãxt
 *
	tpFts
,

8153 
	tsqlôe3_c⁄ãxt
 *
	tpCtx
,

8154 
	tnVÆ
,

8155 
	tsqlôe3_vÆue
 **
	t≠VÆ


8158 
	sFts5Phø£Iãr
 {

8159 c⁄° *
a
;

8160 c⁄° *
b
;

8376 
	sFts5Exãnsi⁄Api
 {

8377 
iVîsi⁄
;

8379 *(*
xU£rD©a
)(
Fts5C⁄ãxt
*);

8381 (*
xCﬁumnCou¡
)(
Fts5C⁄ãxt
*);

8382 (*
xRowCou¡
)(
Fts5C⁄ãxt
*, 
sqlôe3_öt64
 *
≤Row
);

8383 (*
xCﬁumnTŸÆSize
)(
Fts5C⁄ãxt
*, 
iCﬁ
, 
sqlôe3_öt64
 *
≤Tokí
);

8385 (*
xTokíize
)(
Fts5C⁄ãxt
*,

8386 c⁄° *
pText
, 
nText
,

8387 *
pCtx
,

8388 (*
xTokí
)(*, , const *, , , )

8391 (*
xPhø£Cou¡
)(
Fts5C⁄ãxt
*);

8392 (*
xPhø£Size
)(
Fts5C⁄ãxt
*, 
iPhø£
);

8394 (*
xIn°Cou¡
)(
Fts5C⁄ãxt
*, *
≤In°
);

8395 (*
xIn°
)(
Fts5C⁄ãxt
*, 
iIdx
, *
piPhø£
, *
piCﬁ
, *
piOff
);

8397 
sqlôe3_öt64
 (*
xRowid
)(
Fts5C⁄ãxt
*);

8398 (*
xCﬁumnText
)(
Fts5C⁄ãxt
*, 
iCﬁ
, c⁄° **
pz
, *
≤
);

8399 (*
xCﬁumnSize
)(
Fts5C⁄ãxt
*, 
iCﬁ
, *
≤Tokí
);

8401 (*
xQuîyPhø£
)(
Fts5C⁄ãxt
*, 
iPhø£
, *
pU£rD©a
,

8402 (*)(c⁄° 
Fts5Exãnsi⁄Api
*,
Fts5C⁄ãxt
*,*)

8404 (*
xSëAuxd©a
)(
Fts5C⁄ãxt
*, *
pAux
, (*
xDñëe
)(*));

8405 *(*
xGëAuxd©a
)(
Fts5C⁄ãxt
*, 
bCÀ¨
);

8407 (*
xPhø£Fú°
)(
Fts5C⁄ãxt
*, 
iPhø£
, 
Fts5Phø£Iãr
*, *, *);

8408 (*
xPhø£Next
)(
Fts5C⁄ãxt
*, 
Fts5Phø£Iãr
*, *
piCﬁ
, *
piOff
);

8410 (*
xPhø£Fú°Cﬁumn
)(
Fts5C⁄ãxt
*, 
iPhø£
, 
Fts5Phø£Iãr
*, *);

8411 (*
xPhø£NextCﬁumn
)(
Fts5C⁄ãxt
*, 
Fts5Phø£Iãr
*, *
piCﬁ
);

8610 
Fts5Tokíizî
 
	tFts5Tokíizî
;

8611 
·s5_tokíizî
 
	t·s5_tokíizî
;

8612 
	s·s5_tokíizî
 {

8613 (*
xCª©e
)(*, c⁄° **
azArg
, 
nArg
, 
Fts5Tokíizî
 **
µOut
);

8614 (*
xDñëe
)(
Fts5Tokíizî
*);

8615 (*
xTokíize
)(
Fts5Tokíizî
*,

8616 *
pCtx
,

8617 
Êags
,

8618 c⁄° *
pText
, 
nText
,

8619 (*
xTokí
)(

8620 *
pCtx
,

8621 
tÊags
,

8622 c⁄° *
pTokí
,

8623 
nTokí
,

8624 
iSèπ
,

8625 
iEnd


8631 
	#FTS5_TOKENIZE_QUERY
 0x0001

	)

8632 
	#FTS5_TOKENIZE_PREFIX
 0x0002

	)

8633 
	#FTS5_TOKENIZE_DOCUMENT
 0x0004

	)

8634 
	#FTS5_TOKENIZE_AUX
 0x0008

	)

8638 
	#FTS5_TOKEN_COLOCATED
 0x0001

	)

8647 
·s5_≠i
 
	t·s5_≠i
;

8648 
	s·s5_≠i
 {

8649 
iVîsi⁄
;

8652 (*
xCª©eTokíizî
)(

8653 
·s5_≠i
 *
pApi
,

8654 c⁄° *
zName
,

8655 *
pC⁄ãxt
,

8656 
·s5_tokíizî
 *
pTokíizî
,

8657 (*
xDe°roy
)(*)

8661 (*
xFödTokíizî
)(

8662 
·s5_≠i
 *
pApi
,

8663 c⁄° *
zName
,

8664 **
µC⁄ãxt
,

8665 
·s5_tokíizî
 *
pTokíizî


8669 (*
xCª©eFun˘i⁄
)(

8670 
·s5_≠i
 *
pApi
,

8671 c⁄° *
zName
,

8672 *
pC⁄ãxt
,

8673 
·s5_exãnsi⁄_fun˘i⁄
 
xFun˘i⁄
,

8674 (*
xDe°roy
)(*)

8682 #ifde‡
__˝lu•lus


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #i‡
deföed
 
__USE_MISC
 \

785 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

788 
	$ây¶Ÿ
 (Ë
__THROW
;

793 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

796 #ifde‡
__USE_ATFILE


799 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

800 c⁄° *
__to
, 
__Êags
)

801 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

804 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


806 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

813 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

817 #ifde‡
__USE_ATFILE


819 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

820 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

823 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

824 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

825 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

829 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

831 #ifde‡
__USE_ATFILE


833 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

834 
__THROW
 
	`__n⁄nuŒ
 ((2));

838 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

842 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

845 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

852 *
	`gëlogö
 ();

853 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


860 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

863 #ifdef 
__USE_MISC


865 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 #ifdef 
__USE_POSIX2


873 
	#__√ed_gë›t


	)

874 
	~<gë›t.h
>

878 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


882 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #i‡
deföed
 
__USE_MISC


889 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

890 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

894 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

900 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

902 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

909 
	$vh™gup
 (Ë
__THROW
;

912 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

920 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

921 
size_t
 
__off£t
, 
__sˇÀ
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1));

928 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

932 *
	$gëu£rshñl
 (Ë
__THROW
;

933 
	$ídu£rshñl
 (Ë
__THROW
;

934 
	$£tu£rshñl
 (Ë
__THROW
;

940 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

944 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

947 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

959 
	`fsync
 (
__fd
);

962 #ifde‡
__USE_GNU


965 
	$syncfs
 (
__fd
Ë
__THROW
;

969 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


972 
	`gëho°id
 ();

975 
	$sync
 (Ë
__THROW
;

978 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


981 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

986 
	$gëdèbÀsize
 (Ë
__THROW
;

992 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


995 #i‚de‡
__USE_FILE_OFFSET64


996 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 #ifde‡
__REDIRECT_NTH


1000 
	`__REDIRECT_NTH
 (
åunˇã
,

1001 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1002 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1004 
	#åunˇã
 
åunˇã64


	)

1007 #ifde‡
__USE_LARGEFILE64


1008 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1014 #i‡
deföed
 
__USE_POSIX199309
 \

1015 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1018 #i‚de‡
__USE_FILE_OFFSET64


1019 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1023 
·runˇã64
Ë
__wur
;

1025 
	#·runˇã
 
·runˇã64


	)

1028 #ifde‡
__USE_LARGEFILE64


1029 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1035 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1036 || 
deföed
 
__USE_MISC


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1129 
__THROW
 
	`__n⁄nuŒ
 ((1));

1136 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1137 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1143 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1145 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1150 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1151 
	~<bôs/uni°d.h
>

1154 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 #ifde‡
__USE_XOPEN2K


31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@
1
.
1
/usr/include
22
443
Client.cpp
Server.cpp
Store.cpp
mysqlite.cpp
mysqlite.h
/usr/include/arpa/inet.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/sqlite3.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/sched.h
/usr/include/stdint.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/ctype.h
/usr/include/stdc-predef.h
